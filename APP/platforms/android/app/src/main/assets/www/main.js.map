{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/configuration/configuration.service.ts","./src/app/gs-nav/base/base.component.html","./src/app/gs-nav/base/base.component.ts","./src/app/gs-nav/gs-nav.module.ts","./src/app/gs-nav/gs-nav.routing.module.ts","./src/app/gs-nav/nav-item/nav-item.component.html","./src/app/gs-nav/nav-item/nav-item.component.ts","./src/app/gs-nav/top-nav/top-nav.component.html","./src/app/gs-nav/top-nav/top-nav.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/rh/group/group-edit/group-edit.component.html","./src/app/rh/group/group-edit/group-edit.component.ts","./src/app/rh/group/group-filter.ts","./src/app/rh/group/group-list/group-list.component.html","./src/app/rh/group/group-list/group-list.component.ts","./src/app/rh/group/group.module.ts","./src/app/rh/group/group.service.ts","./src/app/rh/group/group.ts","./src/app/rh/user-group/user-group-edit/user-group-edit.component.html","./src/app/rh/user-group/user-group-edit/user-group-edit.component.ts","./src/app/rh/user-group/user-group.module.ts","./src/app/rh/user-group/user-group.service.ts","./src/app/rh/user-group/user-group.ts","./src/app/rh/user-group/userTOgroup/userTOgroup.component.html","./src/app/rh/user-group/userTOgroup/userTOgroup.component.ts","./src/app/rh/user/user-edit/user-edit.component.html","./src/app/rh/user/user-edit/user-edit.component.ts","./src/app/rh/user/user-filter.ts","./src/app/rh/user/user-list/user-list.component.html","./src/app/rh/user/user-list/user-list.component.ts","./src/app/rh/user/user.module.ts","./src/app/rh/user/user.service.ts","./src/app/rh/user/user.ts","./src/app/test/test-edit/test-edit.component.html","./src/app/test/test-edit/test-edit.component.ts","./src/app/test/test-filter.ts","./src/app/test/test-list/test-list.component.html","./src/app/test/test-list/test-list.component.ts","./src/app/test/test.module.ts","./src/app/test/test.service.ts","./src/app/test/test.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"wrapper\">\r\n    <div class=\"sidebar\" data-background-color=\"white\" data-active-color=\"danger\">\r\n      <app-nav></app-nav>\r\n    </div>\r\n    <div class=\"main-panel card\">\r\n      <top-nav></top-nav>\r\n      <div class=\"content\">\r\n\r\n\r\n        <router-outlet></router-outlet>\r\n        <router-outlet name=\"aux\"></router-outlet>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component } from '@angular/core';\nimport {environment} from \"../environments/environment\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = environment['app_name'];\n}\n","\n\n\n\n\n\nimport { TestModule } from './test/test.module';\nimport { GsNavModule } from './gs-nav/gs-nav.module';\n\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatToolbarModule, MatSelectModule, MatCardModule, MatInputModule, MatAutocompleteModule, MatFormFieldModule, MatDatepickerModule, MatNativeDateModule, MatListModule, MatProgressSpinnerModule, MatIconModule, MatButtonModule, MatSidenavModule, MatTabsModule } from '@angular/material';\nimport {UserModule} from \"./rh/user/user.module\";\n\nimport {UserGroupModule} from \"./rh/user-group/user-group.module\";\n  import {ConfigurationService} from \"./configuration/configuration.service\";\nimport {GroupModule} from \"./rh/group/group.module\";\n\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent, NavComponent\n  ],\n  imports: [\n\n\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n\n    UserModule,\n    GroupModule,\n    GsNavModule,\n    TestModule,\n    UserGroupModule,\n\n\n\n  ],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: (configService: ConfigurationService) => () => configService.loadConfigurations(),\n    deps: [ConfigurationService],\n    multi: true\n  }],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {shareReplay} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\ninterface Configuration {\n  resourceServerA: string;\n  resourceServerB: string;\n  stage: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ConfigurationService {\n\n  private readonly CONFIG_URL = 'assets/config/config.json';\n  private configuration$: Observable<Configuration>;\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public loadConfigFiles() {\n    if (!this.configuration$) {\n      this.configuration$ = this.http.get<Configuration>(this.CONFIG_URL).pipe(\n\n        shareReplay(1)\n      );\n    }\n    return this.configuration$.toPromise();\n\n  }\n\n  public  async loadConfigurations() {\n    const data= await  this.loadConfigFiles();\n    this.parseConfigurationApis(data);this.parseConfigurationMain(data);\n    console.log('find de lecture');\n\n  }\n\n  public parseConfigurationMain(data) {\n    for (const key in data.main) {\n\n      environment[key] = data.main[key];\n    }\n\n\n\n  }\n\n  public parseConfigurationApis(data): any {\n\n      for (const key in data.api_roots) {\n      environment[key] = data.api_roots[key];\n    }\n\n\n\n  }\n\n\n\n\n\n}\n","<div class=\"sidebar-wrapper  base\">\n\n  <ul class=\"nav\">\n\n    <ng-content></ng-content>\n\n\n  </ul>\n\n</div>\n","import { NavItemComponent } from './../nav-item/nav-item.component';\nimport { Component, OnInit, ContentChildren, QueryList, Input } from '@angular/core';\n\n\nenum NavPosition{\n  \"top\",\n  \"left\",\n}\n\n\n@Component({\n  selector: 'gs-nav',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n\n@Input()  private orientation:NavPosition=NavPosition.top;\n  \n@Input() private title:String;\n\n\n  @ContentChildren(NavItemComponent) navItems:QueryList <NavItemComponent>;\n\n\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { MatToolbarModule, MatSidenavModule, MatListModule, MatIconModule, MatExpansionModule } from '@angular/material';\n\nimport { GsNavRoutingModule } from './gs-nav.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseComponent } from './base/base.component';\nimport { NavItemComponent } from './nav-item/nav-item.component';\n\nimport { NgxNavbarModule } from 'ngx-bootstrap-navbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {TopNavComponent} from './top-nav/top-nav.component';\n\n@NgModule({\n  declarations: [BaseComponent, NavItemComponent , TopNavComponent],\n  imports: [\n    CommonModule,\n    NgxNavbarModule,\n    BrowserAnimationsModule,\n    GsNavRoutingModule,\n\n    MatExpansionModule,\n\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n\n  ],\n  exports: [\n    BaseComponent, NavItemComponent, TopNavComponent\n  ]\n})\nexport class GsNavModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GsNavRoutingModule { }\r\n","<a mat-card [routerLink]=\"target\" router fxLayout=\"row\" class=\"nav-item card white-semi-transparent\" fxLayoutAlign=\"center\"\n  routerLinkActive=\"active-nav-item\">\n  <li *ngIf=\"childrenItems.length==1;else dropdown\"  (click)=\"sidenav_close()\"  fxLayout=\"row\" fxFlex=\"80\" fxLayoutAlign=\"flex-start\">\n\n\n    <i fxLayoutAlign=\"center\" fxLayout=\"column\" class={{icon}}></i>\n    <p fxLayoutAlign=\"center\" fxLayout=\"column\"><span> {{label}}</span> </p>\n\n  </li>\n</a>\n\n\n\n\n<ng-template #dropdown>\n\n  <mat-accordion >\n    <mat-expansion-panel >\n\n      <mat-expansion-panel-header class=\"nav-item  white-semi-transparent\" fxLayout=\"row\" fxLayoutAlign=\"flex-center\">\n\n\n\n        <li fxLayout=\"row\" fxFlex=\"80\" fxLayoutAlign=\"flex-start\">\n\n\n          <i fxLayoutAlign=\"center\" fxLayout=\"column\" class={{icon}}></i>\n          <p fxLayoutAlign=\"center\" fxLayout=\"column\"><span> {{label}}</span> </p>\n\n        </li>\n\n\n      </mat-expansion-panel-header>\n\n\n      <ng-content></ng-content>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n</ng-template>\n","import { Component, OnInit, ContentChildren, QueryList, Input } from '@angular/core';\n\n@Component({\n  selector: 'nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss']\n})\nexport class NavItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n\n  }\n\n\n\n  sidenav_close(){\n    let body = document.getElementsByTagName('body')[0];\n      body.classList.remove('nav-open');\n    }\n\n\n\n\n  ngAfterViewInit() {\n\n  }\n\n  @Input() label;\n\n  @Input() target=null;\n\n\n  @Input() icon=\"ti-blackboard\"\n\n\n  @ContentChildren(NavItemComponent) childrenItems:QueryList<NavItemComponent>;\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle\" (click)=\"sidebarToggle()\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar bar1\"></span>\n        <span class=\"icon-bar bar2\"></span>\n        <span class=\"icon-bar bar3\"></span>\n      </button>\n      <a class=\"navbar-brand\" href=\"#\"> {{app_name}}</a>\n    </div>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li>\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n            <i class=\"ti-panel\"></i>\n            <p>Stats</p>\n          </a>\n        </li>\n        <li class=\"dropdown\">\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n            <i class=\"ti-bell\"></i>\n            <p class=\"notification\">5</p>\n            <p>Notifications</p>\n            <b class=\"caret\"></b>\n          </a>\n          <ul class=\"dropdown-menu\">\n            <li><a href=\"#\">Notification 1</a></li>\n            <li><a href=\"#\">Notification 2</a></li>\n            <li><a href=\"#\">Notification 3</a></li>\n            <li><a href=\"#\">Notification 4</a></li>\n            <li><a href=\"#\">Another notification</a></li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"#\">\n            <i class=\"ti-settings\"></i>\n            <p>Settings</p>\n          </a>\n        </li>\n      </ul>\n\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent implements OnInit {\n  private sidebarVisible = false;\n\n  constructor() {\n  }\n   app_name:string=environment['app_name'];\n\n  ngOnInit(): void {\n  }\n\n  sidebarToggle() {\n    let body = document.getElementsByTagName('body')[0];\n\n    if (this.sidebarVisible == false) {\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    } else {\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n  }\n\n}\n","\n\n\n\n<gs-nav title={{app_name}} orientation=\"top\">\n\n  <div class=\"logo\">\n    <a class=\"simple-text\">\n      <div class=\"logo-img\" style=\"width:100%\">\n\n        <h3>{{app_name}}</h3>\n\n      </div>\n\n    </a>\n  </div>\n\n  <hr>\n\n\n  <nav-item label=\"Accueil\" target=\"home\">\n\n  </nav-item>\n  <nav-item label=\"Espèces\" target=\"especes\">\n\n  </nav-item>\n\n  <nav-item label=\"Parcelles\" target=\"parcelles\">\n\n  </nav-item>\n\n\n  <nav-item label=\"Ressources humaines\" icon=\"ti-user\">\n\n  <nav-item label=\"Utilisateur\" target=\"rh/users\">\n\n\n\n  </nav-item>\n\n\n  <nav-item label=\"Groupes\" target=\"rh/groups\"></nav-item>\n\n</nav-item>\n\n\n\n\n</gs-nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  app_name:string;\n  constructor() {\n\n\n\n    this.app_name=environment['app_name'];\n  }\n  ngOnInit() {\n\n  }\n\n}\n","<ol class=\"breadcrumb float-right\" *ngIf=\"group\">\r\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Accueil</a></li>\r\n  <li class=\"breadcrumb-item active\" routerLink=\"/rh/groups\">\r\n     Groupes\r\n  </li>\r\n  <li *ngIf=\"group._id\"  class=\"breadcrumb-item active\">\r\n    {{group._id}}\r\n  </li>\r\n\r\n  <li *ngIf=\"!group._id\"  class=\"breadcrumb-item active\">\r\n    Création d'un group\r\n  </li>\r\n</ol>\r\n<mat-expansion-panel  expanded=true class=\"card\" *ngIf=\"group\" fxLayout=\"column\">\r\n  <mat-expansion-panel-header fxFlex=\"5\" class=\"lead\" fxLayout=\"column\" fxLayout=\"center\">\r\n\r\n\r\n      <mat-panel-title>\r\n        <p class=\"h4\">\r\n          <span *ngIf=\"!group._id\">Création d'un group</span>\r\n          <span *ngIf=\"group._id\">group</span>\r\n\r\n\r\n        </p>\r\n      </mat-panel-title>\r\n\r\n      <mat-panel-description>\r\n\r\n        <p class=\"h4\"> Main Informations </p>\r\n      </mat-panel-description>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </mat-expansion-panel-header>\r\n  <div class=\"content\">\r\n    <div *ngIf=\"feedback\" class=\"alert alert-{{feedback.type}}\">{{ feedback.message }}</div>\r\n    <form  #editForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n        <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n          \r\n          <input matInput class=\"form-control\" placeholder=\"Id\" name=\"Id\"\r\n                 type=\"text\"  [(ngModel)]=\"group._id\">\r\n          \r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n        <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n          \r\n          <input matInput class=\"form-control\" placeholder=\"nom\" name=\"Name\"\r\n                 type=\"text\"  [(ngModel)]=\"group.name\">\r\n          \r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n        <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n          \r\n          <input matInput class=\"form-control\" placeholder=\"Description\" name=\"Description\"\r\n                 type=\"text\"  [(ngModel)]=\"group.description\">\r\n          \r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n        <label>\r\n          Statut</label>\r\n        <mat-radio-group [(ngModel)]=\"group.statut\" name=\"statut\">\r\n          <div fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"25\">\r\n            \r\n            <div>\r\n              <mat-radio-button [value]=true fxFlex>\r\n                Actif\r\n              </mat-radio-button>\r\n            </div>\r\n            \r\n            <div>\r\n              <mat-radio-button [value]=false fxFlex>\r\n                Inactif\r\n              </mat-radio-button>\r\n            </div>\r\n            \r\n          </div>\r\n        </mat-radio-group>\r\n      </div>\r\n      \r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.form.valid\">Enregistrer</button>\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Annuler</button>\r\n    </form>\r\n  </div>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { GroupService } from '../group.service';\r\nimport { Group } from '../group';\r\n\r\n@Component({\r\n  selector: 'app-group-edit',\r\n  styleUrls:['./group-edit.scss'],\r\n  templateUrl: './group-edit.component.html'\r\n})\r\nexport class GroupEditComponent implements OnInit {\r\nid: string;\r\n  group: Group;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private groupService: GroupService,\r\n    \r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Group()); }\r\n          return this.groupService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(group => {\r\n          this.group = group;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n}\r\nsave() {\r\n    this.groupService.save(this.group).subscribe(\r\n      group => {\r\n        this.group = group;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/rh/groups']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/rh/groups']);\r\n  }\r\n\r\n}\r\n","export class GroupFilter {\n    name = '';\n    description = '';\n}\n","\r\n<ol class=\"breadcrumb float-right\">\r\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\r\n  <li class=\"breadcrumb-item active\"> Groupes</li>\r\n</ol>\r\n<div class=\"card\">\r\n\r\n  <div class=\"content\">\r\n\r\n    <a [routerLink]=\"['../groups', 'new' ]\" class=\"btn btn-default\">Nouveau</a>\r\n    <hr>\r\n\r\n      <mat-expansion-panel class=\"white-transparent\" style=\"padding :2px\" expanded=\"true\">\r\n        <mat-expansion-panel-header class=\"header\">\r\n\r\n        <p class=\"lead strong\">\r\n        Filtres de recherches\r\n        </p>\r\n        <hr>\r\n\r\n        </mat-expansion-panel-header>\r\n\r\n<mat-card-content class=\"bg-transparent\" fxLayout=\"row\" fxLayoutGap=\"18px\" fxLayoutAlign=\"flex-start\" fxLayout.xs=\"column\" fxLayoutAlign.xs=\"flex-start\"  fxLayout=\"row\">\r\n      \r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">nom</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"nameFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n    \r\n\r\n\r\n\r\n\r\n<mat-form-field>\r\n        <input matInput class=\"\" placeholder=\"val\" name=\"name.val\" [formControl]=\"nameFilter.controls.val\" >\r\n        </mat-form-field>\r\n\r\n      </mat-card-content></mat-card>\r\n      \r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">Description</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"descriptionFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n    \r\n\r\n\r\n\r\n\r\n<mat-form-field>\r\n        <input matInput class=\"\" placeholder=\"val\" name=\"description.val\" [formControl]=\"descriptionFilter.controls.val\" >\r\n        </mat-form-field>\r\n\r\n      </mat-card-content></mat-card>\r\n      \r\n      </mat-card-content>\r\n      </mat-expansion-panel>\r\n  </div>\r\n</div>\r\n<div  *ngIf=\"groupList.length > 0\"  class=\"example-container mat-elevation-z8\">\r\n  \r\n<mat-table class=\"\"  [dataSource]=\"dataSource\" matSort >\r\n  \r\n    <ng-container matColumnDef=\"_id\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Id : </span>\r\n{{item._id}}\r\n      </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">nom : </span>\r\n{{item.name}}\r\n      </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"description\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Description</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Description : </span>\r\n{{item.description}}\r\n      </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"statut\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Statut : </span>\r\n{{item.statut}}\r\n      </mat-cell>\r\n    </ng-container>\r\n  \r\n<ng-container matColumnDef=\"actions\">\r\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n    <mat-cell class=\"\"\r\n              *matCellDef=\"let item\">\r\n<div fxLayout=\"row\" fxLayout.md=\"column\" fxLayoutAlign=\"center\">\r\n      <a [routerLink]=\"['../groups', item._id ]\" class=\"btn btn-secondary\">Détails</a>&nbsp;\r\n      <button (click)=\"delete(item)\" class=\"btn btn-danger\">Supprimer</button>\r\n      </div>\r\n</mat-cell>\r\n  </ng-container>\r\n<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n<mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n</mat-table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { GroupFilter } from '../group-filter';\r\nimport { GroupService } from '../group.service';\r\nimport { Group } from '../group';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-group',\r\n  styleUrls:['./group-list.scss'],\r\n  templateUrl: 'group-list.component.html'\r\n})\r\nexport class GroupListComponent implements OnInit {\r\nfilter = new GroupFilter();\r\nselectedGroup: Group;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Group>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','description','statut','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n  \r\n  descriptionFilter:GsFilter;\r\n  \r\n  filteredValues: any;\r\ninitFilters(){\r\n\r\n        this.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n        \r\n\r\n        this.descriptionFilter=new GsFilter();\r\n\r\n        this.descriptionFilter.controls.val=new FormControl();\r\n        \r\n\r\n    this.filteredValues={  name:this.nameFilter.values,      description:this.descriptionFilter.values,      }\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n    \r\n      \r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n      \r\n        this.descriptionFilter.controls.val.valueChanges.subscribe((value) => {this.descriptionFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n\r\n    this.dataSource.filterPredicate =\r\n      (group: Group, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n      \r\n        let nameCheck =true\r\n          \r\n        let descriptionCheck =true\r\n          \r\n      \r\n        \r\n\r\n          \r\n        \r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!group.name?false: group.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n              \r\n        \r\n\r\n          \r\n        \r\n              if (parsedFilters.description.val) {\r\n                descriptionCheck =!group.name?false: group.description.toLowerCase().includes(parsedFilters.description.val.toLowerCase());\r\n              }\r\n              \r\n      return   nameCheck&&descriptionCheck&&true;\r\n    }\r\n}\r\n\r\n\r\n  get groupList(): Group[] {\r\n    return this.groupService.groupList;\r\n  }\r\nconstructor(private groupService: GroupService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.groupService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<Group>(this.groupService.groupList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: Group): void {\r\n    this.selectedGroup = selected;\r\n  }\r\ndelete(group: Group): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.groupService.delete(group).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\n\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { GroupListComponent } from './group-list/group-list.component';\r\nimport { GroupEditComponent } from './group-edit/group-edit.component';\r\nimport { GroupService } from './group.service';\r\nimport { GROUP_ROUTES } from './group.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(GROUP_ROUTES)\r\n  ],\r\n  declarations: [\r\n    GroupListComponent,\r\n    GroupEditComponent\r\n  ],\r\n  providers: [GroupService],\r\n  exports: []\r\n})\r\nexport class GroupModule { }\r\n","import { Group } from './group';\nimport { GroupFilter } from './group-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class GroupService {\n  groupList: Group[] = [];\n  api = environment.main_api+'/rh/group';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Group> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Group>(url, {params, headers});\n  }\nload(filter: GroupFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.groupList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: GroupFilter): Observable<Group[]> {\n    const params = {\n      'name': filter.name,\n      'description': filter.description,\n    };\nreturn this.http.get<Group[]>(this.api, {params, headers});\n  }\nsave(entity: Group): Observable<Group> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Group>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Group>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: Group): Observable<Group> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Group>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\nexport class Group {\n  \n  _id: string;\n  name: string;\n  description: string;\n  statut: boolean;\nget display(){\n    return  \"group_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","\r\n<div class=\"card bg-primary\">\r\n  <div class=\"content\">\r\n    <div *ngIf=\"feedback\" class=\"alert alert-{{feedback.type}}\">{{ feedback.message }}</div>\r\n    <form *ngIf=\" user_group\" #editForm=\"ngForm\" (ngSubmit)=\"actionUpdate()\">\r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n        <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n          \r\n          <input matInput class=\"form-control\" placeholder=\"Id\" name=\"Id\"\r\n                 type=\"text\"  [(ngModel)]=\"user_group._id\">\r\n          \r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      \r\n      \r\n      \r\n      <div class=\"form-group\">\r\n          <label>\r\n            Statut</label>\r\n          <mat-radio-group [(ngModel)]=\" user_group.statut\" name=\"statut\">\r\n            <div fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"25\">\r\n              \r\n              <div>\r\n                <mat-radio-button [value]=true fxFlex>\r\n                Actif\r\n              </mat-radio-button>\r\n            </div>\r\n            \r\n              <div>\r\n                <mat-radio-button [value]=false fxFlex>\r\n                Inactif\r\n              </mat-radio-button>\r\n            </div>\r\n            \r\n          </div>\r\n        </mat-radio-group>\r\n      </div>\r\n      \r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.form.valid\">Enregistrer</button>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { UserGroupService } from '../user-group.service';\r\nimport { UserGroup  } from '../user-group';\r\n\r\n@Component({\r\n  selector: 'user-group-edit',\r\n  styleUrls:['./user-group-edit.scss'],\r\n  templateUrl: './user-group-edit.component.html'\r\n})\r\nexport class UserGroupEditComponent implements OnInit {\r\n\r\n  id: string;\r\n  @Input()\r\n  user_group: UserGroup;\r\n  feedback: any = {};\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private user_groupService: UserGroupService,\r\n  \r\n)\r\n  {\r\n  }\r\n  ngOnInit() {\r\n\r\n    \r\n  }\r\n  actionUpdate() {\r\n    this.user_groupService.update(this.user_group).subscribe(\r\n      data => {\r\n      this.user_group = data;\r\n      this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n      setTimeout(() => {\r\n        this.feedback=undefined;\r\n      }, 1000);\r\n    },\r\n    err => {\r\n      this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n    }\r\n  );\r\n  }\r\n  cancel() {\r\n    this.router.navigate(['/rh/userGroups']);\r\n  }\r\n  \r\n}\r\n","\r\n\r\n\r\nimport { UserService } from \"src/app/rh/user/user.service\"\r\nimport { User} from \"src/app/rh/user/user\"\r\n\r\nimport { GroupService } from  \"src/app/rh/group/group.service\";\r\n  import { Group} from  \"src/app/rh/group/group\";\r\n  \r\nimport { UserGroupService } from './user-group.service';\r\nimport { GroupToUserComponent } from './groupTOuser/groupTOuser.component';\r\nimport { UserToGroupComponent } from './userTOgroup/userTOgroup.component';\r\nimport { UserGroupEditComponent } from './user-group-edit/user-group-edit.component';\r\nimport { NgModule } from '@angular/core';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatAutocompleteModule,MatSelectModule, MatExpansionModule, MatButtonModule,MatSpinner, MatProgressSpinnerModule, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatRadioModule, MatButton, MatCardModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\nFormsModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule\r\n],\r\n  declarations: [\r\nUserToGroupComponent,\r\n    \r\n    GroupToUserComponent,\r\n      \r\n    UserGroupEditComponent,\r\n  ],\r\n  providers: [UserGroupService,GroupService,UserService],\r\n  exports: [\r\nUserToGroupComponent,\r\n   GroupToUserComponent,\r\n  ]\r\n})\r\nexport class UserGroupModule { }\r\n","\r\n\r\n\r\nimport { UserService } from \"src/app/rh/user/user.service\"\r\nimport { GroupService } from  \"src/app/rh/group/group.service\";\r\nimport { User} from \"src/app/rh/user/user\"\r\n\r\n  import { Group} from  \"src/app/rh/group/group\";\r\n    \r\nimport { camelize } from '@angular-devkit/core/src/utils/strings';\r\nimport { UserGroup} from './user-group';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nconst caster=require('angular-crud/gs-cast');\r\nconst headers = new HttpHeaders().set('Accept', 'application/json');\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\nexport class UserGroupService {\r\napi = environment.main_api+'/rh/user_group';\r\nconstructor(private http: HttpClient) {\r\n    }\r\npublic findByUser(user:User):Observable<any>{\r\nconst url = this.api+'/'+'user'+'/'+user._id;\r\n        const params = {\r\n};\r\nreturn this.http.get(url,{params,headers});\r\n}\r\npublic findByGroup(group:Group):Observable<any>{\r\nconst url = this.api+'/'+'group'+'/'+group._id;\r\n        const params = {\r\n};\r\nreturn this.http.get(url,{params,headers});\r\n}\r\npublic link(user_group:UserGroup){\r\nconst params ={\r\n}\r\n            return this.http.post<UserGroup>(this.api,user_group,\r\n                {headers,params})\r\n}\r\npublic separate(user_group:UserGroup){\r\nconst url = this.api+\"/\"+user_group._id;\r\n            const params ={\r\n            }\r\n                return this.http.delete<UserGroup>(url,\r\n                    {headers,params})\r\n\r\n    }\r\n\r\npublic update(user_group:UserGroup){\r\n    const url = this.api+\"/\"+user_group._id;\r\n    const params ={\r\n    }\r\n    return this.http.put<UserGroup>(url,user_group, {headers,params})\r\n\r\n  }\r\n}\r\n","\r\n\r\nimport { UserService } from \"src/app/rh/user/user.service\"\r\nimport { User} from \"src/app/rh/user/user\"\r\n\r\nimport { GroupService } from  \"src/app/rh/group/group.service\";\r\n  import { Group} from  \"src/app/rh/group/group\";\r\n  \r\n\r\nexport class UserGroup {\r\n    group:Group;\r\n     user:User;\r\n\r\n        _id: string;\r\n        statut: boolean;\r\n}\r\n","\r\n<mat-expansion-panel fxLayout=\"column\">\r\n\r\n  <mat-expansion-panel-header   fxFlex=\"5\" class=\"lead\" fxLayout=\"column\" fxLayout=\"center\">\r\n    <mat-panel-title>\r\n      <p class=\"h4\"> group </p>\r\n    </mat-panel-title>\r\n\r\n    <mat-panel-description>\r\n\r\n      <p class=\"h4\"> Manage yours groups </p>\r\n    </mat-panel-description>\r\n\r\n  </mat-expansion-panel-header>\r\n\r\n\r\n\r\n\r\n  <mat-expansion-panel style=\"overflow: auto \"  fxLayout=\"column\" fxLayoutGap=\"10\" fxLayoutAlign=\"flex-start\">\r\n\r\n    <mat-expansion-panel-header   fxFlex=\"5\" class=\"lead\" fxLayout=\"column\" fxLayout=\"center\" >\r\n    <i class=\"ti-search h4\"></i>\r\n    </mat-expansion-panel-header>\r\n\r\n\r\n\r\n\r\n      <mat-form-field>\r\n        <mat-label class=\"h5\">Recherche d'un group </mat-label>\r\n        <input matInput class=\"form-control\" name=\"groupSearch\"\r\n               type=\"text\"  [formControl]=\"groupSearch\">\r\n      </mat-form-field>\r\n\r\n\r\n\r\n    <mat-card *ngFor=\"let group of foundGroups\" fxFLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between\">\r\n        <div class=\"bg-transparent\" fxFlex=\"40\" fxFlex.xs=\"80\">\r\n          {{group}}\r\n        </div>\r\n        <div fxFlex=\"20\">\r\n          <button  *ngIf=\"!user_groupList.has(group._id);else alreadyMemberTemplate\"  class=\"btn btn-primary\" mat-button (click)=\"actionJoin(group)\">REJOINDRE</button>\r\n          <ng-template #alreadyMemberTemplate><mat-card> DEJA MEMBRE</mat-card> </ng-template>\r\n        </div>\r\n      </mat-card>\r\n\r\n  </mat-expansion-panel>\r\n\r\n\r\n\r\n\r\n  <mat-expansion-panel style=\"overflow: auto \"  fxLayout=\"column\" fxLayoutGap=\"5\" fxLayoutAlign=\"flex-start\" >\r\n\r\n    <mat-expansion-panel-header  fxFlex=\"5\" class=\"lead\" fxLayout=\"column\" fxLayout=\"center\">\r\n      <p class=\"h5\"> Liste des groups de user </p>\r\n    </mat-expansion-panel-header>\r\n\r\n\r\n\r\n    <mat-expansion-panel *ngFor=\"let user_group of user_groupList |keyvalue\" fxLayout=\"column\" fxLayoutGap=\"10\"  fxLayout.xs=\"column\" fxLayoutAlign=\"space-between\">\r\n      <mat-expansion-panel-header>\r\n        <p >{{ user_group.value.group}}</p>\r\n      </mat-expansion-panel-header>\r\n      <div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n      <div class=\"bg-transparent\" fxFlex=\"70\" fxFlex.xs=\"80\">\r\n\r\n        <user-group-edit   [user_group]=\" user_group.value\">\r\n\r\n    </user-group-edit >\r\n\r\n      </div>\r\n      <div fxFlex=\"20\">\r\n        <button class=\"btn btn-danger\" mat-button (click)=\"actionQuit(user_group.value)\">QUITTER</button>\r\n      </div>\r\n      </div>\r\n    </mat-expansion-panel>\r\n\r\n\r\n  </mat-expansion-panel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</mat-expansion-panel>\r\n\r\n\r\n\r\n","\r\n\r\nimport { UserService } from \"src/app/rh/user/user.service\"\r\nimport { User} from \"src/app/rh/user/user\"\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport {UserFilter} from \"src/app/rh/user/user-filter\"\r\n\r\n  import { GroupService } from  \"src/app/rh/group/group.service\";\r\n  import { Group} from  \"src/app/rh/group/group\";\r\n  import {GroupFilter} from \"src/app/rh/group/group-filter\"\r\n  \r\nimport { UserGroupService } from './../user-group.service';\r\nimport { UserGroup } from '../user-group'\r\nconst caster=require('angular-crud/gs-cast');\r\n@Component({\r\n  selector: 'user-TO-group',\r\n  templateUrl: './userTOgroup.component.html',\r\n  styleUrls:['./userTOgroup.scss'],\r\n  providers:[\r\n    GroupService\r\n\r\n  ]\r\n})\r\nexport class UserToGroupComponent implements OnInit {\r\n  id: string;\r\n  @Input()\r\n  user: User\r\n  user_groupList:Map<string,UserGroup>=new Map();\r\n\r\n  groupSearch: FormControl=new FormControl();\r\n  foundGroups:Group[];\r\n  isSearching:boolean;\r\n\r\n  feedback: any = {};\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private user_group_service:UserGroupService,\r\n    private groupService:GroupService\r\n  )\r\n  {\r\n  }\r\n  ngOnInit() {\r\n\r\n\r\n    this.load();\r\n    this.enableSearch();\r\n  }\r\n\r\n\r\n  load(){\r\n    var currentUser=this.user;\r\n    this.user_group_service.findByUser(this.user).subscribe(\r\n      data=>{\r\n        for(var result of data){\r\n          this.groupService.findById(result.group).subscribe(group=>\r\n          {\r\n            var temp=new UserGroup();\r\n            Object.assign(temp,result);\r\n            temp.user=currentUser;\r\n            temp.group=group;\r\n            this.user_groupList.set(group._id,temp);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  enableSearch(){\r\n    this.groupSearch.valueChanges.pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isSearching=true;}),\r\n      switchMap(value => this.groupService.find(new GroupFilter())\r\n        .pipe(\r\n          finalize(() => this.isSearching=false),\r\n        )\r\n      )\r\n    ).subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Group);\r\n      this.foundGroups=resultList;\r\n      console.log(this.foundGroups);\r\n    }))\r\n\r\n  }\r\n\r\n\r\n  actionJoin(group){\r\n    var user_group=new UserGroup();\r\n    user_group.user=this.user;\r\n    user_group.group=group;\r\n    this.user_group_service.link(user_group).subscribe(data=>{\r\n        this.user_groupList.set(group._id,data)\r\n      console.log(\"Jointure effectuée avec succès\")},\r\n      err=>{\"Erreur survenue lors de la jointure\"})\r\n  }\r\n\r\n\r\n  actionQuit(user_group){\r\n    this.user_group_service.separate(user_group).subscribe(data=>{\r\n      this.user_groupList.delete(user_group.group._id)\r\n        console.log(\"Separation effectuée avec succès\")},\r\n      err=>{\"Erreur survenue lors de la séparation\"})\r\n  }\r\n}\r\n","<ol class=\"breadcrumb float-right \" *ngIf=\"user\">\r\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Accueil</a></li>\r\n  <li class=\"breadcrumb-item active\"><a routerLink=\"/rh/users\"> Liste des utilisateurs </a> </li>\r\n  <li class=\"breadcrumb-item active\"> <span *ngIf=\"!user._id\">Création d'un user</span> <span *ngIf=\"user._id\">{{user._id}}</span> </li>\r\n</ol>\r\n\r\n\r\n<div class=\"card\" *ngIf=\"user\">\r\n  <div class=\"header\">\r\n    <h2 class=\"title\">\r\n        <span *ngIf=\"!user._id\">Création d'un user</span>\r\n        <span *ngIf=\"user._id\">user</span>\r\n    </h2>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div *ngIf=\"feedback\" class=\"alert alert-{{feedback.type}}\">{{ feedback.message }}</div>\r\n    <form *ngIf=\"user\" #editForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n\r\n                  <input matInput class=\"form-control\" placeholder=\"Id\" name=\"Id\"\r\n                    type=\"text\"  [(ngModel)]=\"user._id\">\r\n\r\n          </mat-form-field>\r\n          </div>\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n\r\n                  <input matInput class=\"form-control\" placeholder=\"nom\" name=\"Name\"\r\n                    type=\"text\"  [(ngModel)]=\"user.name\">\r\n\r\n          </mat-form-field>\r\n          </div>\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n\r\n                  <input matInput class=\"form-control\" placeholder=\"Prénom\" name=\"Firstname\"\r\n                    type=\"text\"  [(ngModel)]=\"user.firstname\">\r\n\r\n          </mat-form-field>\r\n          </div>\r\n\r\n\r\n      <div class=\"form-group\">\r\n         <mat-form-field  class=\"gs-mat-field\" fxFlex=\"100\">\r\n          <input matInput class=\"form-control\" placeholder=\"Group\" name=\"Group\"\r\n            [matAutocomplete]=\"autoGroup\" [formControl]=\"groupInput\" (blur)=\"checkGroup()\">\r\n        </mat-form-field>\r\n        <mat-autocomplete #autoGroup=\"matAutocomplete\" [displayWith]=\"displayGroup\"\r\n          (optionSelected)=\"groupClick($event)\">\r\n            <mat-option *ngIf=\"isLoadingGroup\" class=\"is-loading\">\r\n            <mat-spinner diameter=\"50\"></mat-spinner>\r\n          </mat-option>\r\n          <ng-container *ngIf=\"!isLoadingGroup\">\r\n            <mat-option *ngFor=\"let group of filteredGroupList\" [value]=\"group\">\r\n              <span>{{\r\n                group}}</span>\r\n            </mat-option>\r\n          </ng-container>\r\n        </mat-autocomplete>\r\n </div>\r\n\r\n\r\n\r\n\r\n\r\n              <div class=\"form-group\">\r\n            <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n                <mat-label>Sexe</mat-label>\r\n                <mat-select [(value)]=\"user.sexe\">\r\n\r\n                  <mat-option value=\"M\"> Masculin</mat-option>\r\n\r\n                  <mat-option value=F> Féminin</mat-option>\r\n\r\n</mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n\r\n                    <input matInput [matDatepicker]=\"datepicker\" placeholder=\"Date de naissance\" [(ngModel)]=\"user.date_naissance\" name=\"DateNaissance\"                                           required   >\r\n                    <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker touchUi=\"true\" #datepicker></mat-datepicker>\r\n\r\n          </mat-form-field>\r\n          </div>\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n\r\n                  <input matInput class=\"form-control\" placeholder=\"Niveau \" name=\"Niveau\"\r\n                    type=\"text\"  [(ngModel)]=\"user.niveau\">\r\n\r\n          </mat-form-field>\r\n          </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.form.valid\">Enregistrer</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Annuler</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n<user-TO-group *ngIf=\"user\" [user]=\"user\"></user-TO-group>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { UserService } from '../user.service';\r\nimport { User } from '../user';\r\n\r\n  import { GroupService } from \"src/app/rh/group/group.service\";\r\nimport { Group} from \"src/app/rh/group/group\";\r\nimport { GroupFilter} from \"src/app/rh/group/group-filter\";\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  styleUrls:['./user-edit.scss'],\r\n  templateUrl: './user-edit.component.html'\r\n})\r\nexport class UserEditComponent implements OnInit {\r\nid: string;\r\n  user: User;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n     private groupService: GroupService, \r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new User()); }\r\n          return this.userService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(user => {\r\n          this.user = user;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n        this.configureGroupInput()\r\n        \r\n}\r\nsave() {\r\n    this.userService.save(this.user).subscribe(\r\n      user => {\r\n        this.user = user;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/rh/users']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/rh/users']);\r\n  }\r\n\r\nfilteredGroupList:Group[]=new Array<Group>();\r\n  groupInput:FormControl;\r\n  selectedGroup:Group;\r\n  isLoadingGroup=false;\r\ngroupClick(event: any) {\r\n    this.selectedGroup= event.option.value;\r\n  }\r\ncheckGroup() {\r\n    if (!this.selectedGroup|| this.selectedGroup!== this.groupInput.value) {\r\n      this.groupInput.setValue(null);\r\n      this.selectedGroup= null;\r\n      return;\r\n    }\r\n    this.user.group=this.selectedGroup;\r\n  }\r\ndisplayGroup(group:Group) {\r\nif (group) return group\r\n}\r\n  configureGroupInput(){\r\n    this.groupInput=new FormControl();\r\nthis.groupInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingGroup= true;}),\r\n      switchMap(value => this.groupService.find(new GroupFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingGroup= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Group);\r\n      this.filteredGroupList=resultList;}))\r\n}\r\n\r\n}\r\n","export class UserFilter {\n    name = '';\n    firstname = '';\n    sexe = '';\n    date_naissance = '';\n    niveau = '';\n}\n","\r\n<ol class=\"breadcrumb float-right\">\r\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\r\n  <li class=\"breadcrumb-item active\">Liste des utilisateurs</li>\r\n</ol>\r\n<div class=\"card\">\r\n\r\n  <div class=\"content\">\r\n\r\n    <a [routerLink]=\"['../users', 'new' ]\" class=\"btn btn-default\">Nouveau</a>\r\n    <hr>\r\n\r\n      <mat-expansion-panel class=\"white-transparent\" style=\"padding :2px\" expanded=\"true\">\r\n        <mat-expansion-panel-header class=\"header\">\r\n\r\n        <p class=\"lead strong\">\r\n        Filtres de recherches\r\n        </p>\r\n        <hr>\r\n\r\n        </mat-expansion-panel-header>\r\n\r\n<mat-card-content class=\"bg-transparent\" fxLayout=\"row\" fxLayoutGap=\"18px\" fxLayoutAlign=\"flex-start\" fxLayout.xs=\"column\" fxLayoutAlign.xs=\"flex-start\"  fxLayout=\"row\">\r\n\r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">nom</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"nameFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n\r\n\r\n\r\n\r\n<mat-form-field>\r\n        <input matInput class=\"\" placeholder=\"val\" name=\"name.val\" [formControl]=\"nameFilter.controls.val\" >\r\n        </mat-form-field>\r\n\r\n      </mat-card-content></mat-card>\r\n\r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">Prénom</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"firstnameFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n\r\n\r\n\r\n\r\n<mat-form-field>\r\n        <input matInput class=\"\" placeholder=\"val\" name=\"firstname.val\" [formControl]=\"firstnameFilter.controls.val\" >\r\n        </mat-form-field>\r\n\r\n      </mat-card-content></mat-card>\r\n\r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">Sexe</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"sexeFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n\r\n\r\n\r\n\r\n<mat-form-field class=\"gs-mat-field\" fxFlex=\"100\">\r\n          <mat-label>Sexe</mat-label>\r\n          <mat-select  [formControl]=\"sexeFilter.controls.val\">\r\n\r\n            <mat-option value=M> Masculin</mat-option>\r\n\r\n            <mat-option value=F> Féminin</mat-option>\r\n\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n\r\n      </mat-card-content></mat-card>\r\n\r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">Date de naissance</p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"date_naissanceFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n        <mat-form-field fxFlex=\"30\">\r\n          <input matInput [matDatepicker]=\"dpdate_naissanceMin\" placeholder=\"latest\" [formControl]=\"date_naissanceFilter.controls.min\" name=\"DateNaissance\" >\r\n          <mat-datepicker-toggle matSuffix [for]=\"dpdate_naissanceMin\"></mat-datepicker-toggle>\r\n          <mat-datepicker touchUi=\"true\" #dpdate_naissanceMin></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex=\"30\">\r\n          <input matInput [matDatepicker]=\"dpdate_naissanceVal\" placeholder=\"val\" [formControl]=\"date_naissanceFilter.controls.val\" name=\"DateNaissance\" >\r\n<mat-datepicker-toggle matSuffix [for]=\"dpdate_naissanceVal\"></mat-datepicker-toggle>\r\n          <mat-datepicker touchUi=\"true\" #dpdate_naissanceVal></mat-datepicker>\r\n        </mat-form-field>\r\n<mat-form-field fxFlex=\"30\">\r\n          <input matInput [matDatepicker]=\"dpdate_naissanceMax\" placeholder=\"latest\" [formControl]=\"date_naissanceFilter.controls.max\" name=\"DateNaissance\" >\r\n<mat-datepicker-toggle matSuffix [for]=\"dpdate_naissanceMax\"></mat-datepicker-toggle>\r\n          <mat-datepicker touchUi=\"true\" #dpdate_naissanceMax></mat-datepicker>\r\n</mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n      </mat-card-content></mat-card>\r\n\r\n        <mat-card  class=\"white-transparent\">\r\n        <mat-card-header class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <p fxFlex class=\"bold\">Niveau </p>\r\n\r\n          <button style=\"border:none;background: transparent\"  (click)=\"niveauFilter.reset()\" fxFlex>\r\n          <i class=\"ti-reload\"></i>\r\n          </button>\r\n\r\n        </mat-card-header>\r\n      <mat-card-content class=\"white-transparent\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n\r\n\r\n\r\n\r\n<mat-form-field>\r\n        <input matInput class=\"\" placeholder=\"val\" name=\"niveau.val\" [formControl]=\"niveauFilter.controls.val\" >\r\n        </mat-form-field>\r\n\r\n      </mat-card-content></mat-card>\r\n\r\n      </mat-card-content>\r\n      </mat-expansion-panel>\r\n  </div>\r\n</div>\r\n<div  *ngIf=\"userList.length > 0\"  class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"\"  [dataSource]=\"dataSource\" matSort >\r\n\r\n    <ng-container matColumnDef=\"_id\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Id : </span>\r\n{{item._id}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">nom : </span>\r\n{{item.name}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"firstname\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Prénom</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Prénom : </span>\r\n{{item.firstname}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"group\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Groupe préféré</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Groupe préféré : </span>\r\n{{item.group}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"sexe\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Sexe</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Sexe : </span>\r\n{{item.sexe}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date_naissance\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Date de naissance</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Date de naissance : </span>\r\n{{item.date_naissance}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"niveau\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Niveau </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let item\" class=\"mobile-hide\">\r\n         <span class=\"mobile-label\">Niveau  : </span>\r\n{{item.niveau}}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n<ng-container matColumnDef=\"actions\">\r\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n    <mat-cell class=\"\"\r\n              *matCellDef=\"let item\">\r\n<div fxLayout=\"row\" fxLayout.md=\"column\" fxLayoutAlign=\"center\">\r\n      <a [routerLink]=\"['../users', item._id ]\" class=\"btn btn-secondary\">Détails</a>&nbsp;\r\n      <button (click)=\"delete(item)\" class=\"btn btn-danger\">Supprimer</button>\r\n      </div>\r\n</mat-cell>\r\n  </ng-container>\r\n<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n<mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n</mat-table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { UserFilter } from '../user-filter';\r\nimport { UserService } from '../user.service';\r\nimport { User } from '../user';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-user',\r\n  styleUrls:['./user-list.scss'],\r\n  templateUrl: 'user-list.component.html'\r\n})\r\nexport class UserListComponent implements OnInit {\r\nfilter = new UserFilter();\r\nselectedUser: User;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<User>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','firstname','group','sexe','date_naissance','niveau','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n\r\n  firstnameFilter:GsFilter;\r\n\r\n  sexeFilter:GsFilter;\r\n\r\n  date_naissanceFilter:GsFilter;\r\n\r\n  niveauFilter:GsFilter;\r\n\r\n  filteredValues: any;\r\ninitFilters(){\r\n\r\n        this.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.firstnameFilter=new GsFilter();\r\n\r\n        this.firstnameFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.sexeFilter=new GsFilter();\r\n\r\n        this.sexeFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.date_naissanceFilter=new GsFilter();\r\n\r\nthis.date_naissanceFilter.controls.min=new FormControl();\r\nthis.date_naissanceFilter.controls.max=new FormControl();\r\nthis.date_naissanceFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.niveauFilter=new GsFilter();\r\n\r\n        this.niveauFilter.controls.val=new FormControl();\r\n\r\n\r\n    this.filteredValues={  name:this.nameFilter.values,      firstname:this.firstnameFilter.values,      sexe:this.sexeFilter.values,      date_naissance:this.date_naissanceFilter.values,      niveau:this.niveauFilter.values,      }\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.firstnameFilter.controls.val.valueChanges.subscribe((value) => {this.firstnameFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.sexeFilter.controls.val.valueChanges.subscribe((value) => {this.sexeFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.date_naissanceFilter.controls.val.valueChanges.subscribe((value)=>{this.date_naissanceFilter.values.val=value;this.applyFilter();})\r\n        this.date_naissanceFilter.controls.min.valueChanges.subscribe((value)=>{this.date_naissanceFilter.values.min=value;this.applyFilter();})\r\n        this.date_naissanceFilter.controls.max.valueChanges.subscribe((value)=>{this.date_naissanceFilter.values.max=value;this.applyFilter();})\r\n\r\n\r\n        this.niveauFilter.controls.val.valueChanges.subscribe((value) => {this.niveauFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (user: User, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let nameCheck =true\r\n\r\n        let firstnameCheck =true\r\n\r\n        let sexeCheck =true\r\n\r\n        let date_naissanceCheck =true\r\n\r\n        let niveauCheck =true\r\n\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!user.name?false: user.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.firstname.val) {\r\n                firstnameCheck =!user.name?false: user.firstname.toLowerCase().includes(parsedFilters.firstname.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.sexe.val) {\r\n                sexeCheck =!user.sexe?false:user.sexe==parsedFilters.sexe.val;\r\n              }\r\n\r\n\r\n          if (parsedFilters.date_naissance.val) {\r\n            date_naissanceCheck =user.date_naissance?false:user.date_naissance==parsedFilters.date_naissance.val;\r\n          } else {\r\n            if (parsedFilters.date_naissance.min) {\r\n              date_naissanceCheck = date_naissanceCheck && (parsedFilters.date_naissance.min<= user.date_naissance);\r\n            }\r\n            if (parsedFilters.date_naissance.max) {\r\n              date_naissanceCheck = date_naissanceCheck && (parsedFilters.date_naissance.max >= user.date_naissance);\r\n            }\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.niveau.val) {\r\n                niveauCheck =!user.name?false: user.niveau.toLowerCase().includes(parsedFilters.niveau.val.toLowerCase());\r\n              }\r\n\r\n      return   nameCheck&&firstnameCheck&&sexeCheck&&date_naissanceCheck&&niveauCheck&&true;\r\n    }\r\n}\r\n\r\n\r\n  get userList(): User[] {\r\n    return this.userService.userList;\r\n  }\r\nconstructor(private userService: UserService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.userService.load(this.filter).then((data   )=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<User>(this.userService.userList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: User): void {\r\n    this.selectedUser = selected;\r\n  }\r\ndelete(user: User): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.userService.delete(user).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\n\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserService } from './user.service';\nimport { USER_ROUTES } from './user.routes';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\nimport Module = WebAssembly.Module;\nimport {UserGroupModule} from \"../user-group/user-group.module\";\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatTableModule,MatPaginatorModule,MatSortModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    UserGroupModule,\n    MatRadioModule,\n    ReactiveFormsModule ,\n    FormsModule,\n    RouterModule.forChild(USER_ROUTES)\n  ],\n  declarations: [\n    UserListComponent,\n    UserEditComponent\n  ],\n  providers: [UserService],\n  exports: []\n})\nexport class UserModule { }\n","import { User } from './user';\nimport { UserFilter } from './user-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class UserService {\n  userList: User[] = [];\n  api = environment.main_api+'/rh/user';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<User> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<User>(url, {params, headers});\n  }\nload(filter: UserFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.userList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: UserFilter): Observable<User[]> {\n    const params = {\n      'name': filter.name,\n      'firstname': filter.firstname,\n      'sexe': filter.sexe,\n      'date_naissance': filter.date_naissance,\n      'niveau': filter.niveau,\n    };\nreturn this.http.get<User[]>(this.api, {params, headers});\n  }\nsave(entity: User): Observable<User> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<User>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<User>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: User): Observable<User> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<User>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n    \n  import { Group} from   \"src/app/rh/group/group\";\n  \nexport class User {\n  \n  _id: string;\n  name: string;\n  firstname: string;\n  group: Group;\n  sexe: string;\n  date_naissance: Date;\n  niveau: string;\nget display(){\n    return  \"user_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","<ol class=\"breadcrumb \">\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Accueil</a></li>\n  <li class=\"breadcrumb-item active\">Nouvelle espèce</li>\n</ol>\n<div class=\"card\">\n  <div class=\"header\">\n    <h2 class=\"title\">Nouvelle Espèce </h2>\n  </div>\n  <div class=\"content\">\n    <div *ngIf=\"feedback\" class=\"alert alert-{{feedback.type}}\">{{ feedback.message }}</div>\n    <form *ngIf=\"test\" #editForm=\"ngForm\" (ngSubmit)=\"save()\">\n    \n      <div class=\"form-group\">\n        <label>Id</label>\n        {{test._id || 'n/a'}} \n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"name\">Nom de l'espèce</label>\n        <input [(ngModel)]=\"test.name\" id=\"name\" name=\"name\" class=\"form-control\">\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"description\">Description de l'espèce</label>\n        <input [(ngModel)]=\"test.description\" id=\"description\" name=\"description\" class=\"form-control\">\n      </div>\n    \n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.form.valid\">Enregistrer</button>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Annuler</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { TestService } from '../test.service';\nimport { Test } from '../test';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-test-edit',\n  templateUrl: './test-edit.component.html'\n})\nexport class TestEditComponent implements OnInit {\n\n  id: string;\n  test: Test;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private testService: TestService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Test()); }\n          return this.testService.findById(id);\n        })\n      )\n      .subscribe(test => {\n          this.test = test;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\n        }\n      );\n  }\n\n  save() {\n    this.testService.save(this.test).subscribe(\n      test => {\n        this.test = test;\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\n        setTimeout(() => {\n          this.router.navigate(['/tests']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/tests']);\n  }\n}\n","export class TestFilter {\n}\n","<ol class=\"breadcrumb \">\n  <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n  <li class=\"breadcrumb-item active\">Liste des espèces</li>\n</ol>\n<div class=\"card\">\n  <div class=\"header\">\n    <h2 class=\"title\">Liste des espèces </h2>\n  </div>\n  <div class=\"content\">\n    <form #f=\"ngForm\">\n      \n      <button (click)=\"search()\" [disabled]=\"!f?.valid\" class=\"btn btn-primary\">Rechercher</button>\n      <a [routerLink]=\"['../tests', 'new' ]\" class=\"btn btn-default\">Nouveau</a>\n    </form>\n  </div>\n</div>\n<div class=\"card\" *ngIf=\"testList.length > 0\">\n  <div *ngIf=\"feedback\" class=\"alert alert-{{feedback.type}}\">{{ feedback.message }}</div>\n  <div class=\"table-responsive\">\n    <table class=\"table table-centered table-hover mb-0\" id=\"datatable\">\n      <thead>\n        <tr>\n          <th class=\"border-top-0\" scope=\"col\">Id</th>\n          <th class=\"border-top-0\" scope=\"col\">Nom de l'espèce</th>\n          <th class=\"border-top-0\" scope=\"col\">Description de l'espèce</th>\n          <th class=\"border-top-0\" scope=\"col\" style=\"width:120px\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of testList\" [class.active]=\"item === selectedTest\">\n        \n          <td>{{item._id}}</td>\n          <td>{{item.name}}</td>\n          <td>{{item.description}}</td>\n          <td style=\"white-space: nowrap\">\n            <a [routerLink]=\"['../tests', item._id ]\" class=\"btn btn-secondary\">Modifier</a>&nbsp;\n            <button (click)=\"delete(item)\" class=\"btn btn-danger\">Supprimer</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TestFilter } from '../test-filter';\nimport { TestService } from '../test.service';\nimport { Test } from '../test';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: 'test-list.component.html'\n})\nexport class TestListComponent implements OnInit {\n\n  filter = new TestFilter();\n  selectedTest: Test;\n  feedback: any = {};\n\n  get testList(): Test[] {\n    return this.testService.testList;\n  }\n\n  constructor(private testService: TestService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.testService.load(this.filter);\n  }\n\n  select(selected: Test): void {\n    this.selectedTest = selected;\n  }\n\n  delete(test: Test): void {\n    if (confirm('Etes-vous sûr?')) {\n      this.testService.delete(test).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TestListComponent } from './test-list/test-list.component';\nimport { TestEditComponent } from './test-edit/test-edit.component';\nimport { TestService } from './test.service';\nimport { TEST_ROUTES } from './test.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(TEST_ROUTES)\n  ],\n  declarations: [\n    TestListComponent,\n    TestEditComponent\n  ],\n  providers: [TestService],\n  exports: []\n})\nexport class TestModule { }\n","import { Test } from './test';\nimport { TestFilter } from './test-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class TestService {\n  testList: Test[] = [];\n  api = 'http://localhost:5000/api/espece';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Test> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Test>(url, {params, headers});\n  }\n\n  load(filter: TestFilter): void {\n    this.find(filter).subscribe(result => {\n        this.testList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: TestFilter): Observable<Test[]> {\n    const params = {\n    };\n\n    return this.http.get<Test[]>(this.api, {params, headers});\n  }\n\n  save(entity: Test): Observable<Test> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Test>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Test>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Test): Observable<Test> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Test>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Test {\n  _id: number;\n  name: string;\n  description: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  main_api: 'http://localhost:5800',\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
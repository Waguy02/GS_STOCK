{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/gs-nav/base/base.component.html","./src/app/gs-nav/nav-item/nav-item.component.html","./src/app/gs-nav/param/param.component.html","./src/app/gs-nav/top-nav/top-nav.component.html","./src/app/nav/nav.component.html","./src/app/params/manager/auth/auth.component.html","./src/app/params/manager/manager-edit/manager-edit.component.html","./src/app/params/manager/manager-list/manager-list.component.html","./src/app/partners/customer/customer-edit/customer-edit.component.html","./src/app/partners/customer/customer-list/customer-list.component.html","./src/app/partners/provider/provider-edit/provider-edit.component.html","./src/app/partners/provider/provider-list/provider-list.component.html","./src/app/stock/category/category-edit/category-edit.component.html","./src/app/stock/category/category-list/category-list.component.html","./src/app/stock/class_product/class-product-edit/class-product-edit.component.html","./src/app/stock/class_product/class-product-list/class-product-list.component.html","./src/app/stock/product/product-edit/product-edit.component.html","./src/app/stock/product/product-list/product-list.component.html","./src/app/stock_operations/payment/payment-edit/payment-edit.component.html","./src/app/stock_operations/payment/payment-list/payment-list.component.html","./src/app/stock_operations/product_command/product-command-edit/product-command-edit.component.html","./src/app/stock_operations/product_command/product-command-list/product-command-list.component.html","./src/app/stock_operations/product_command/product-command-print/product-command-print.component.html","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-edit/product-command-unit-edit.component.html","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-list/product-command-unit-list.component.html","./src/app/test/test-edit/test-edit.component.html","./src/app/test/test-list/test-list.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/configuration/configuration.service.ts","./src/app/gs-nav/base/base.component.scss","./src/app/gs-nav/base/base.component.ts","./src/app/gs-nav/gs-nav.module.ts","./src/app/gs-nav/gs-nav.routing.module.ts","./src/app/gs-nav/nav-item/nav-item.component.scss","./src/app/gs-nav/nav-item/nav-item.component.ts","./src/app/gs-nav/param/param.component.scss","./src/app/gs-nav/param/param.component.ts","./src/app/gs-nav/top-nav/top-nav.component.scss","./src/app/gs-nav/top-nav/top-nav.component.ts","./src/app/nav/nav.component.scss","./src/app/nav/nav.component.ts","./src/app/params/manager/auth/auth.component.scss","./src/app/params/manager/auth/auth.component.ts","./src/app/params/manager/auth/auth.service.ts","./src/app/params/manager/manager-edit/manager-edit.component.ts","./src/app/params/manager/manager-edit/manager-edit.scss","./src/app/params/manager/manager-filter.ts","./src/app/params/manager/manager-list/manager-list.component.ts","./src/app/params/manager/manager-list/manager-list.scss","./src/app/params/manager/manager.module.ts","./src/app/params/manager/manager.routes.ts","./src/app/params/manager/manager.service.ts","./src/app/params/manager/manager.ts","./src/app/partners/customer/customer-edit/customer-edit.component.ts","./src/app/partners/customer/customer-edit/customer-edit.scss","./src/app/partners/customer/customer-filter.ts","./src/app/partners/customer/customer-list/customer-list.component.ts","./src/app/partners/customer/customer-list/customer-list.scss","./src/app/partners/customer/customer.module.ts","./src/app/partners/customer/customer.routes.ts","./src/app/partners/customer/customer.service.ts","./src/app/partners/customer/customer.ts","./src/app/partners/provider/provider-edit/provider-edit.component.ts","./src/app/partners/provider/provider-edit/provider-edit.scss","./src/app/partners/provider/provider-filter.ts","./src/app/partners/provider/provider-list/provider-list.component.ts","./src/app/partners/provider/provider-list/provider-list.scss","./src/app/partners/provider/provider.module.ts","./src/app/partners/provider/provider.routes.ts","./src/app/partners/provider/provider.service.ts","./src/app/partners/provider/provider.ts","./src/app/stock/category/category-edit/category-edit.component.ts","./src/app/stock/category/category-edit/category-edit.scss","./src/app/stock/category/category-filter.ts","./src/app/stock/category/category-list/category-list.component.ts","./src/app/stock/category/category-list/category-list.scss","./src/app/stock/category/category.module.ts","./src/app/stock/category/category.routes.ts","./src/app/stock/category/category.service.ts","./src/app/stock/category/category.ts","./src/app/stock/class_product/class-product-edit/class-product-edit.component.ts","./src/app/stock/class_product/class-product-edit/class-product-edit.scss","./src/app/stock/class_product/class-product-filter.ts","./src/app/stock/class_product/class-product-list/class-product-list.component.ts","./src/app/stock/class_product/class-product-list/class-product-list.scss","./src/app/stock/class_product/class-product.module.ts","./src/app/stock/class_product/class-product.routes.ts","./src/app/stock/class_product/class-product.service.ts","./src/app/stock/class_product/class-product.ts","./src/app/stock/product/product-edit/product-edit.component.ts","./src/app/stock/product/product-edit/product-edit.scss","./src/app/stock/product/product-filter.ts","./src/app/stock/product/product-list/product-list.component.ts","./src/app/stock/product/product-list/product-list.scss","./src/app/stock/product/product.module.ts","./src/app/stock/product/product.routes.ts","./src/app/stock/product/product.service.ts","./src/app/stock/product/product.ts","./src/app/stock_operations/payment/payment-edit/payment-edit.component.ts","./src/app/stock_operations/payment/payment-edit/payment-edit.scss","./src/app/stock_operations/payment/payment-filter.ts","./src/app/stock_operations/payment/payment-list/payment-list.component.ts","./src/app/stock_operations/payment/payment-list/payment-list.scss","./src/app/stock_operations/payment/payment.module.ts","./src/app/stock_operations/payment/payment.routes.ts","./src/app/stock_operations/payment/payment.service.ts","./src/app/stock_operations/payment/payment.ts","./src/app/stock_operations/product_command/product-command-edit/product-command-edit.component.ts","./src/app/stock_operations/product_command/product-command-edit/product-command-edit.scss","./src/app/stock_operations/product_command/product-command-filter.ts","./src/app/stock_operations/product_command/product-command-list/product-command-list.component.ts","./src/app/stock_operations/product_command/product-command-list/product-command-list.scss","./src/app/stock_operations/product_command/product-command-print/product-command-print.component.scss","./src/app/stock_operations/product_command/product-command-print/product-command-print.component.ts","./src/app/stock_operations/product_command/product-command.module.ts","./src/app/stock_operations/product_command/product-command.routes.ts","./src/app/stock_operations/product_command/product-command.service.ts","./src/app/stock_operations/product_command/product-command.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-edit/product-command-unit-edit.component.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-edit/product-command-unit-edit.scss","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-filter.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-list/product-command-unit-list.component.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit-list/product-command-unit-list.scss","./src/app/stock_operations/product_command/product_command_unit/product-command-unit.module.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit.routes.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit.service.ts","./src/app/stock_operations/product_command/product_command_unit/product-command-unit.ts","./src/app/test/test-edit/test-edit.component.ts","./src/app/test/test-filter.ts","./src/app/test/test-list/test-list.component.ts","./src/app/test/test.module.ts","./src/app/test/test.routes.ts","./src/app/test/test.service.ts","./src/app/test/test.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\r\\n<div *ngIf=\\\"!authService.active_user;else content\\\" class=\\\"wrapper\\\" style=\\\"padding-left: 10px;padding-right: 10px;background:  linear-gradient(white,lightblue)\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <p class=\\\"h1 lead text-center\\\"> ODICAM  </p>\\r\\n<app-auth></app-auth>\\r\\n</div>\\r\\n\\r\\n<ng-template #content>\\r\\n<div class=\\\"wrapper\\\">\\r\\n\\r\\n    <div class=\\\"sidebar\\\" data-background-color=\\\"white\\\" data-active-color=\\\"danger\\\">\\r\\n      <app-nav></app-nav>\\r\\n    </div>\\r\\n    <div class=\\\"main-panel card\\\">\\r\\n      <top-nav></top-nav>\\r\\n      <div class=\\\"content\\\">\\r\\n\\r\\n\\r\\n        <router-outlet></router-outlet>\\r\\n        <router-outlet name=\\\"aux\\\"></router-outlet>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"sidebar-wrapper  base\\\">\\n\\n  <ul class=\\\"nav\\\">\\n\\n    <ng-content></ng-content>\\n\\n\\n  </ul>\\n\\n</div>\\n\"","export default \"<a mat-card [routerLink]=\\\"target\\\" router fxLayout=\\\"row\\\" class=\\\"nav-item card\\\" fxLayoutAlign=\\\"center\\\"\\n  routerLinkActive=\\\"active-nav-item\\\" fxFlex=\\\"100\\\">\\n  <li *ngIf=\\\"childrenItems.length==1;else dropdown\\\"  (click)=\\\"sidenav_close()\\\"  fxLayout=\\\"row\\\" fxFlex=\\\"80\\\" fxLayoutAlign=\\\"flex-start\\\">\\n\\n\\n    <i fxLayoutAlign=\\\"center\\\" fxLayout=\\\"column\\\" class={{icon}}></i>\\n    <p fxLayoutAlign=\\\"center\\\" fxLayout=\\\"column\\\"><span> {{label}}</span> </p>\\n\\n  </li>\\n</a>\\n\\n\\n\\n\\n<ng-template #dropdown>\\n\\n  <mat-accordion style=\\\"width: 100%\\\" >\\n    <mat-expansion-panel >\\n\\n      <mat-expansion-panel-header class=\\\"nav-item \\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-center\\\">\\n\\n\\n\\n        <li fxLayout=\\\"row\\\" fxFlex=\\\"80\\\" fxLayoutAlign=\\\"flex-start\\\">\\n\\n\\n          <i fxLayoutAlign=\\\"center\\\" fxLayout=\\\"column\\\" class={{icon}}></i>\\n          <p fxLayoutAlign=\\\"center\\\" fxLayout=\\\"column\\\"><span> {{label}}</span> </p>\\n\\n        </li>\\n\\n\\n      </mat-expansion-panel-header>\\n\\n\\n      <ng-content></ng-content>\\n    </mat-expansion-panel>\\n\\n  </mat-accordion>\\n</ng-template>\\n\"","export default \"<mat-card class=\\\"bg-transparent\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\n\\n  <mat-card-header fxFlex=\\\"10\\\">\\n      <H3>Paramètres </H3>\\n    <hr/>\\n  </mat-card-header>\\n\\n  <mat-card-content fxFlex=\\\"80\\\" class=\\\"bg-primary\\\">\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","export default \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar bar1\\\"></span>\\n        <span class=\\\"icon-bar bar2\\\"></span>\\n        <span class=\\\"icon-bar bar3\\\"></span>\\n      </button>\\n      <mat-card class=\\\"white-semi-transparent navbar-brand\\\" fxLayout=\\\"row\\\">\\n         {{app_name}}\\n\\n        --- {{authService.active_user.name}}\\n      </mat-card>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-panel\\\"></i>\\n            <p>Statistiques</p>\\n          </a>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-bell\\\"></i>\\n            <p class=\\\"notification\\\">5</p>\\n            <p>Notifications</p>\\n            <b class=\\\"caret\\\"></b>\\n          </a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Notification 1</a></li>\\n            <li><a href=\\\"#\\\">Notification 2</a></li>\\n            <li><a href=\\\"#\\\">Notification 3</a></li>\\n            <li><a href=\\\"#\\\">Notification 4</a></li>\\n            <li><a href=\\\"#\\\">Another notification</a></li>\\n          </ul>\\n        </li>\\n        <li>\\n          <a href=\\\"#\\\">\\n            <i class=\\\"ti-settings\\\"></i>\\n            <p  (click)=\\\"openParam()\\\">Paramètres</p>\\n          </a>\\n        </li>\\n\\n        <li>\\n          <a href=\\\"#\\\">\\n            <i class=\\\"ti-close\\\"></i>\\n            <p  (click)=\\\"disconnect()\\\">Se déconnecter</p>\\n          </a>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"\\n\\n\\n\\n<gs-nav title={{app_name}} orientation=\\\"top\\\">\\n\\n  <div class=\\\"logo\\\">\\n\\n      <div class=\\\"logo-img \\\" style=\\\"width:100%\\\">\\n\\n        <h3>{{app_name}}</h3>\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  <hr>\\n\\n\\n\\n  <nav-item label=\\\"Partenaires\\\" icon=\\\"ti-user\\\" target=\\\"home\\\">\\n    <nav-item label=\\\"Mes clients\\\" icon=\\\"ti-user\\\" target=\\\"partners/customers\\\">\\n\\n    </nav-item>\\n\\n    <nav-item label=\\\"Mes fournisseurs\\\" icon=\\\"ti-user\\\" target=\\\"partners/providers\\\">\\n\\n    </nav-item>\\n  </nav-item>\\n\\n\\n  <nav-item label=\\\" produits\\\" target=\\\"home\\\">\\n    <nav-item label=\\\"Types de Produit\\\" target=\\\"stock/products\\\">\\n\\n    </nav-item>\\n    <nav-item label=\\\"Stocks de produit\\\" target=\\\"stock/classProducts\\\">\\n\\n    </nav-item>\\n\\n    <nav-item label=\\\"Categories de produit\\\" target=\\\"stock/categories\\\">\\n\\n    </nav-item>\\n  </nav-item>\\n\\n\\n\\n  <nav-item label=\\\"Commandes de produit\\\" target=\\\"stock_operations/productCommands\\\">\\n\\n  </nav-item>\\n\\n\\n  <nav-item label=\\\"Paramètres\\\" icon=\\\"ti-setting\\\">\\n    <nav-item label=\\\"Utilisateurs\\\" icon=\\\"ti-user\\\" target=\\\"params/managers\\\">  </nav-item>\\n\\n  </nav-item>\\n\\n\\n\\n</gs-nav>\\n\\n\"","export default \"<mat-card fxLayout=\\\"column\\\" class=\\\"white-semi-transparent \\\">\\n\\n\\n  <mat-card-header fxFlex=\\\"20\\\">\\n\\n    <p class=\\\"lead h5\\\">\\n      Connexion\\n    </p>\\n  </mat-card-header>\\n\\n  <mat-card-content fxFlex=\\\"70\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <mat-form-field fxFlex=\\\"25\\\">\\n      <mat-label>\\n        Nom d'utilisateur\\n      </mat-label>\\n    <input class=\\\"form-control\\\" matInput [formControl]=\\\"nameInput\\\">\\n    </mat-form-field>\\n    <mat-form-field fxFlex=\\\"25\\\">\\n      <mat-label>\\n        Mot de passe\\n      </mat-label>\\n      <input class=\\\"form-control\\\" matInput [formControl]=\\\"passwordInput\\\" type=\\\"password\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n\\n    <mat-card class=\\\"white-transparent\\\" fxFlex=\\\"20\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Se connecter </button>\\n    </mat-card>\\n\\n\\n\\n  </mat-card-content>\\n\\n\\n</mat-card>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"manager\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/params/managers\\\">\\r\\n    Utilisateur\\r\\n  </li>\\r\\n  <li *ngIf=\\\"manager._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{manager._id}}\\r\\n  </li>\\r\\n<li *ngIf=\\\"!manager._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Création d'un manager\\r\\n  </li>\\r\\n</ol>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"manager\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n<mat-panel-title>\\r\\n      <p class=\\\"h4\\\">\\r\\n        <span *ngIf=\\\"!manager._id\\\">Création d'un manager</span>\\r\\n        <span *ngIf=\\\"manager._id\\\">manager</span>\\r\\n</p>\\r\\n    </mat-panel-title>\\r\\n<mat-panel-description>\\r\\n<p class=\\\"h4\\\"> Main Informations </p>\\r\\n    </mat-panel-description>\\r\\n</mat-expansion-panel-header>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n    <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n      <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n             type=\\\"text\\\"  [(ngModel)]=\\\"manager._id\\\"    readonly  >\\r\\n\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n      <input matInput class=\\\"form-control\\\" placeholder=\\\"nom\\\" name=\\\"Name\\\"\\r\\n             type=\\\"text\\\"  [(ngModel)]=\\\"manager.name\\\"    >\\r\\n\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"!manager._id\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Mot de passe\\\" name=\\\"password\\\"\\r\\n                 type=\\\"password\\\"  [(ngModel)]=\\\"manager.password\\\"    >\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n  </form>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Utilisateur</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n<div class=\\\"content\\\">\\r\\n<a [routerLink]=\\\"['../managers', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n<p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n</mat-expansion-panel-header>\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">nom</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"nameFilter.reset()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"name.val\\\" [formControl]=\\\"nameFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Statut</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n\\r\\n            <mat-option [value]=true> Actif</mat-option>\\r\\n\\r\\n            <mat-option [value]=false> Inactif</mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"managerList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">nom : </span>\\r\\n{{item.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../managers', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"customer\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/partners/customers\\\">\\r\\n    Clients\\r\\n  </li>\\r\\n  <li *ngIf=\\\"customer._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{customer._id}}\\r\\n  </li>\\r\\n\\r\\n  <li *ngIf=\\\"!customer._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Création d'un customer\\r\\n  </li>\\r\\n</ol>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"customer\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n\\r\\n\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h4\\\">\\r\\n          <span *ngIf=\\\"!customer._id\\\">Création d'un customer</span>\\r\\n          <span *ngIf=\\\"customer._id\\\">customer</span>\\r\\n\\r\\n\\r\\n        </p>\\r\\n      </mat-panel-title>\\r\\n\\r\\n      <mat-panel-description>\\r\\n\\r\\n        <p class=\\\"h4\\\"> Main Informations </p>\\r\\n      </mat-panel-description>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </mat-expansion-panel-header>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n    <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"customer._id\\\"   readonly  >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"nom\\\" name=\\\"Name\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"customer.name\\\"   >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select [(value)]=\\\"customer.status\\\">\\r\\n            \\r\\n            <mat-option [value]=true> Actif</mat-option>\\r\\n            \\r\\n            <mat-option [value]=false> Inactif</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Clients</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <a [routerLink]=\\\"['../customers', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n\\r\\n      <mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n\\r\\n        <p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">nom</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"nameFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"name.val\\\" [formControl]=\\\"nameFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Statut</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n            \\r\\n            <mat-option [value]=true> Actif</mat-option>\\r\\n            \\r\\n            <mat-option [value]=false> Inactif</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"customerList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n  \\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">nom : </span>\\r\\n{{item.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../customers', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"provider\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/partners/providers\\\">\\r\\n    Fournisseurs\\r\\n  </li>\\r\\n  <li *ngIf=\\\"provider._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{provider._id}}\\r\\n  </li>\\r\\n\\r\\n  <li *ngIf=\\\"!provider._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Création d'un provider\\r\\n  </li>\\r\\n</ol>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"provider\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n\\r\\n\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h4\\\">\\r\\n          <span *ngIf=\\\"!provider._id\\\">Création d'un provider</span>\\r\\n          <span *ngIf=\\\"provider._id\\\">provider</span>\\r\\n\\r\\n\\r\\n        </p>\\r\\n      </mat-panel-title>\\r\\n\\r\\n      <mat-panel-description>\\r\\n\\r\\n        <p class=\\\"h4\\\"> Main Informations </p>\\r\\n      </mat-panel-description>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </mat-expansion-panel-header>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n    <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"provider._id\\\"   readonly  >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"nom\\\" name=\\\"Name\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"provider.name\\\"   >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select [(value)]=\\\"provider.status\\\">\\r\\n            \\r\\n            <mat-option [value]=true> Actif</mat-option>\\r\\n            \\r\\n            <mat-option [value]=false> Inactif</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Fournisseurs</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <a [routerLink]=\\\"['../providers', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n\\r\\n      <mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n\\r\\n        <p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">nom</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"nameFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"name.val\\\" [formControl]=\\\"nameFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Statut</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n            \\r\\n            <mat-option [value]=true> Actif</mat-option>\\r\\n            \\r\\n            <mat-option [value]=false> Inactif</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"providerList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n  \\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">nom : </span>\\r\\n{{item.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../providers', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"category\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/stock/categories\\\">\\r\\n    Categories de produit\\r\\n  </li>\\r\\n  <li *ngIf=\\\"category._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{category._id}}\\r\\n  </li>\\r\\n\\r\\n  <li *ngIf=\\\"!category._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Création d'un category\\r\\n  </li>\\r\\n</ol>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"category\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n\\r\\n\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h4\\\">\\r\\n          <span *ngIf=\\\"!category._id\\\">Création d'un category</span>\\r\\n          <span *ngIf=\\\"category._id\\\">category</span>\\r\\n\\r\\n\\r\\n        </p>\\r\\n      </mat-panel-title>\\r\\n\\r\\n      <mat-panel-description>\\r\\n\\r\\n        <p class=\\\"h4\\\"> Main Informations </p>\\r\\n      </mat-panel-description>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </mat-expansion-panel-header>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n    <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"category._id\\\"   readonly  >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"nom\\\" name=\\\"Name\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"category.name\\\"   >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          \\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"Description\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"category.description\\\"   >\\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select [(value)]=\\\"category.status\\\">\\r\\n            \\r\\n            <mat-option [value]=true> Active</mat-option>\\r\\n            \\r\\n            <mat-option [value]=false> Inactive</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Categories de produit</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <a [routerLink]=\\\"['../categories', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n\\r\\n      <mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n\\r\\n        <p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">nom</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"nameFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"name.val\\\" [formControl]=\\\"nameFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Description</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"descriptionFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"description.val\\\" [formControl]=\\\"descriptionFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Statut</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n            \\r\\n            <mat-option value=true> Active</mat-option>\\r\\n            \\r\\n            <mat-option value=false> Inactive</mat-option>\\r\\n            \\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n      \\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"categoryList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n  \\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">nom : </span>\\r\\n{{item.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Description</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Description : </span>\\r\\n{{item.description}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../categories', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"  <ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"class_product\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/stock/classProducts\\\">\\r\\n      Stock de produit\\r\\n    </li>\\r\\n    <li *ngIf=\\\"class_product._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n      {{class_product._id}}\\r\\n    </li>\\r\\n\\r\\n    <li *ngIf=\\\"!class_product._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n      Création d'un class_product\\r\\n    </li>\\r\\n  </ol>\\r\\n  <mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"class_product\\\" fxLayout=\\\"column\\\">\\r\\n    <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n\\r\\n\\r\\n        <mat-panel-title>\\r\\n          <p class=\\\"h4\\\">\\r\\n            <span *ngIf=\\\"!class_product._id\\\">Création d'un class_product</span>\\r\\n            <span *ngIf=\\\"class_product._id\\\">class_product</span>\\r\\n\\r\\n\\r\\n          </p>\\r\\n        </mat-panel-title>\\r\\n\\r\\n        <mat-panel-description>\\r\\n\\r\\n          <p class=\\\"h4\\\"> Main Informations </p>\\r\\n        </mat-panel-description>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"content\\\">\\r\\n      <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n      <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n                   type=\\\"text\\\"  [(ngModel)]=\\\"class_product._id\\\"    readonly  >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Product\\\" name=\\\"Product\\\"\\r\\n                   [matAutocomplete]=\\\"autoProduct\\\" [formControl]=\\\"productInput\\\" (blur)=\\\"checkProduct()\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-autocomplete #autoProduct=\\\"matAutocomplete\\\" [displayWith]=\\\"displayProduct\\\"\\r\\n          (optionSelected)=\\\"productClick($event)\\\">\\r\\n          <mat-option *ngIf=\\\"isLoadingProduct\\\" class=\\\"is-loading\\\">\\r\\n            <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n          </mat-option>\\r\\n          <ng-container *ngIf=\\\"!isLoadingProduct\\\">\\r\\n            <mat-option *ngFor=\\\"let product of filteredProductList\\\" [value]=\\\"product\\\">\\r\\n                <span>{{\\r\\n                  product.name}}</span>\\r\\n            </mat-option>\\r\\n          </ng-container>\\r\\n          </mat-autocomplete>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Nom de la classe \\\" name=\\\"Label\\\"\\r\\n                   type=\\\"text\\\"  [(ngModel)]=\\\"class_product.label\\\"    >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Prix unitaire\\\" name=\\\"UnitPrice\\\"\\r\\n                   type=\\\"number\\\"  [(ngModel)]=\\\"class_product.unit_price\\\"    >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput [matDatepicker]=\\\"datepicker\\\" placeholder=\\\"Date d'arrivée\\\" [(ngModel)]=\\\"class_product.date_intrance\\\" name=\\\"DateIntrance\\\"                                           required   >\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"datepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker touchUi=\\\"true\\\" #datepicker></mat-datepicker>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"quantité\\\" name=\\\"Quantity\\\"\\r\\n                   type=\\\"number\\\"  [(ngModel)]=\\\"class_product.quantity\\\"    readonly  >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n            <mat-label>Statut</mat-label>\\r\\n            <mat-select [(value)]=\\\"class_product.status\\\">\\r\\n\\r\\n              <mat-option [value]=true> Active</mat-option>\\r\\n\\r\\n              <mat-option [value]=false> Inactive</mat-option>\\r\\n\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Stock de produit</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n<div class=\\\"content\\\">\\r\\n<a [routerLink]=\\\"['../classProducts', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n<p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n</mat-expansion-panel-header>\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">produit</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"resetProductFilter()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n<mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"Product\\\" name=\\\"Product\\\"\\r\\n               [matAutocomplete]=\\\"autoProduct\\\" [formControl]=\\\"productInput\\\" (blur)=\\\"checkProduct()\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-autocomplete #autoProduct=\\\"matAutocomplete\\\" [displayWith]=\\\"displayProduct\\\"\\r\\n                        (optionSelected)=\\\"productClick($event)\\\">\\r\\n        <mat-option *ngIf=\\\"isLoadingProduct\\\"  class=\\\"is-loading\\\">\\r\\n          <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n        </mat-option>\\r\\n        <ng-container *ngIf=\\\"!isLoadingProduct\\\">\\r\\n          <mat-option *ngFor=\\\"let product of filteredProductList\\\" [value]=\\\"product\\\">\\r\\n            <span>{{product.name}}</span>\\r\\n          </mat-option>\\r\\n        </ng-container>\\r\\n      </mat-autocomplete>\\r\\n    </mat-card-content>\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Nom de la classe </p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"labelFilter.reset()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"label.val\\\" [formControl]=\\\"labelFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"class_productList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"product\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >produit</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">produit : </span>\\r\\n{{item.product.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"label\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Nom de la classe </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Nom de la classe  : </span>\\r\\n{{item.label}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"unit_price\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Prix unitaire</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Prix unitaire : </span>\\r\\n{{item.unit_price|currency:\\\"XAF\\\":\\\"symbol\\\"}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"date_intrance\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Date d'arrivée</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Date d'arrivée : </span>\\r\\n{{item.date_intrance|date:'medium'}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"quantity\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >quantité</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">quantité : </span>\\r\\n{{item.quantity}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../classProducts', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"product\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/stock/products\\\">\\r\\n    Produits disponibles\\r\\n  </li>\\r\\n  <li *ngIf=\\\"product._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{product._id}}\\r\\n  </li>\\r\\n\\r\\n  <li *ngIf=\\\"!product._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Création d'un product\\r\\n  </li>\\r\\n</ol>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"product\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n\\r\\n\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h4\\\">\\r\\n          <span *ngIf=\\\"!product._id\\\">Création d'un product</span>\\r\\n          <span *ngIf=\\\"product._id\\\">product</span>\\r\\n\\r\\n\\r\\n        </p>\\r\\n      </mat-panel-title>\\r\\n\\r\\n      <mat-panel-description>\\r\\n\\r\\n        <p class=\\\"h4\\\"> Main Informations </p>\\r\\n      </mat-panel-description>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </mat-expansion-panel-header>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n    <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Id\\\" name=\\\"Id\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"product._id\\\"   readonly  >\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"nom\\\" name=\\\"Name\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"product.name\\\"   >\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"Description\\\"\\r\\n                 type=\\\"text\\\"  [(ngModel)]=\\\"product.description\\\"   >\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Category\\\" name=\\\"Category\\\"\\r\\n                 [matAutocomplete]=\\\"autoCategory\\\" [formControl]=\\\"categoryInput\\\" (blur)=\\\"checkCategory()\\\">\\r\\n\\r\\n        </mat-form-field>\\r\\n        <mat-autocomplete #autoCategory=\\\"matAutocomplete\\\" [displayWith]=\\\"displayCategory\\\"\\r\\n        (optionSelected)=\\\"categoryClick($event)\\\">\\r\\n        <mat-option *ngIf=\\\"isLoadingCategory\\\" class=\\\"is-loading\\\">\\r\\n          <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n        </mat-option>\\r\\n        <ng-container *ngIf=\\\"!isLoadingCategory\\\">\\r\\n          <mat-option *ngFor=\\\"let category of filteredCategoryList\\\" [value]=\\\"category\\\">\\r\\n              <span>{{category.name}}</span>\\r\\n          </mat-option>\\r\\n        </ng-container>\\r\\n        </mat-autocomplete>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n          <input matInput class=\\\"form-control\\\" placeholder=\\\"Prix de base\\\" name=\\\"UnitPrice\\\"\\r\\n                 type=\\\"number\\\"  [(ngModel)]=\\\"product.unit_price\\\"   >\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select [(value)]=\\\"product.status\\\">\\r\\n\\r\\n            <mat-option [value]=true> Active</mat-option>\\r\\n\\r\\n            <mat-option [value]=false> Inactive</mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Produits disponibles</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <a [routerLink]=\\\"['../products', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n\\r\\n      <mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n\\r\\n        <p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">nom</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"nameFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"name.val\\\" [formControl]=\\\"nameFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Description</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"descriptionFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"val\\\" name=\\\"description.val\\\" [formControl]=\\\"descriptionFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Prix de base</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"unit_priceFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n        <mat-form-field fxFlex=\\\"30\\\">\\r\\n          <input matInput class=\\\"\\\" placeholder=\\\"min\\\" name=\\\"unit_price.min\\\" [formControl]=\\\"unit_priceFilter.controls.min\\\" >\\r\\n        </mat-form-field >\\r\\n        <mat-form-field fxFlex=\\\"30\\\">\\r\\n        <input matInput class=\\\"\\\" placeholder=\\\"value\\\" name=\\\"unit_price.val\\\" [formControl]=\\\"unit_priceFilter.controls.val\\\" >\\r\\n        </mat-form-field>\\r\\n<mat-form-field fxFlex=\\\"30\\\">\\r\\n          <input matInput class=\\\"\\\" placeholder=\\\"max\\\" name=\\\"unit_price.max\\\" [formControl]=\\\"unit_priceFilter.controls.max\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Statut</p>\\r\\n\\r\\n          <button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\" fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Statut</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n\\r\\n            <mat-option [value]=true> Active</mat-option>\\r\\n\\r\\n            <mat-option [value]=false> Inactive</mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"productList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">nom : </span>\\r\\n{{item.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Description</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Description : </span>\\r\\n{{item.description}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"category\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Catégorie</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Catégorie : </span>\\r\\n{{item.category.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"unit_price\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Prix de base</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Prix de base : </span>\\r\\n{{item.unit_price}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Statut</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Statut : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../products', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"\\r\\n  <mat-card style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"payment\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n      <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\"  fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group \\\" fxFlex=\\\"30\\\" >\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Montant du versement \\\" name=\\\"amount\\\"  [formControl]=\\\"amountInput\\\"  type=\\\"number\\\"  [(ngModel)]=\\\"payment.amount\\\"    required >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group \\\" fxFlex=\\\"15\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" [matDatepicker]=\\\"datepicker\\\" placeholder=\\\"Date\\\"   [(ngModel)]=\\\"payment.date\\\" name=\\\"Date\\\"                                           required   >\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"datepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker touchUi=\\\"true\\\" #datepicker></mat-datepicker>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <button type=\\\"submit\\\" fxFlex=\\\"30\\\" style=\\\"height: 60%\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer le versement</button>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n\"","export default \"\\r\\n\\r\\n<div  *ngIf=\\\"command.command_payments.data.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <ng-container matColumnDef=\\\"amount\\\">\\r\\n    <mat-header-cell *matHeaderCellDef mat-sort-header >Montant</mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n      <span class=\\\"mobile-label\\\">Montant: </span>\\r\\n      {{item.amount|currency:'FCFA'}}\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <ng-container matColumnDef=\\\"date\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Date</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Date : </span>\\r\\n{{item.date}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"manager\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Utilisateur</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Utilisateur : </span>\\r\\n{{item.manager}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"product_command\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Commande</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Commande : </span>\\r\\n{{item.product_command}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Etat</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Etat : </span>\\r\\n{{item.status}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../payments', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n\\r\\n\\r\\n  <mat-card fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" *ngIf=\\\"command.command_units_datasource.data.length>0\\\">\\r\\n    <mat-form-field fxFlex=\\\"25\\\">\\r\\n      <mat-label>\\r\\n       Total des Versements\\r\\n      </mat-label>\\r\\n      <input matInput readonly [value]=\\\"command.amount_payment|currency:'FCFA'\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <mat-form-field fxFlex=\\\"25\\\">\\r\\n      <mat-label>\\r\\n        Reste à payer\\r\\n      </mat-label>\\r\\n      <input matInput readonly [value]=\\\"command.amount_payment-command.amount|currency:'FCFA'\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\" *ngIf=\\\"product_command\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\" routerLink=\\\"/stock_operations/productCommands\\\">\\r\\n    Commandes de produits\\r\\n  </li>\\r\\n  <li *ngIf=\\\"product_command._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    {{product_command._id}}\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!product_command._id\\\"  class=\\\"breadcrumb-item active\\\">\\r\\n    Nouvelle Commande.\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"40px\\\" fxLayoutAlign=\\\"flex-start\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <mat-expansion-panel style=\\\"overflow: auto \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"product_command\\\" fxLayout=\\\"column\\\">\\r\\n    <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h4\\\">\\r\\n          <span *ngIf=\\\"!product_command._id\\\">Nouvelle commande</span>\\r\\n          <span *ngIf=\\\"product_command._id\\\">Commande de produit  </span>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </p>\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        <p class=\\\"h4\\\">  </p>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <span *ngIf=\\\"product_command._id\\\"><button mat-button class=\\\"btn btn-secondary\\\" (click)=\\\"visualize()\\\"><mat-icon class=\\\"ti-printer\\\"> </mat-icon> Visualiser le bon de commande </button> </span>\\r\\n    <div class=\\\"content\\\">\\r\\n      <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n      <div class=\\\"card\\\" fxLayoutGap=\\\"10px\\\" fxLayout=\\\"column\\\">\\r\\n        <mat-expansion-panel style=\\\"overflow: auto;padding:1px \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"product_command\\\" fxLayout=\\\"column\\\">\\r\\n          <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n            <mat-panel-title>\\r\\n              <p class=\\\"h6\\\">\\r\\n                Produits de la commande\\r\\n              </p>\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n\\r\\n            </mat-panel-description>\\r\\n\\r\\n          </mat-expansion-panel-header>\\r\\n          <div class=\\\"content\\\"    *ngIf=\\\"product_command.command_units_datasource\\\" style=\\\"padding:1px\\\">\\r\\n\\r\\n            <app-product-command-unit-edit *ngIf=\\\"!product_command._id\\\"  [product_command]=\\\"product_command\\\" ></app-product-command-unit-edit>\\r\\n            <app-product-command-unit   [command]=\\\"product_command\\\" ></app-product-command-unit>\\r\\n\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <mat-expansion-panel style=\\\"overflow: auto;padding:1px \\\" expanded=true class=\\\"card\\\" *ngIf=\\\"product_command\\\" fxLayout=\\\"column\\\">\\r\\n          <mat-expansion-panel-header fxFlex=\\\"5\\\" class=\\\"lead\\\" fxLayout=\\\"column\\\" fxLayout=\\\"center\\\">\\r\\n            <mat-panel-title>\\r\\n              <p class=\\\"h6\\\">\\r\\n                Payments\\r\\n              </p>\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n\\r\\n            </mat-panel-description>\\r\\n\\r\\n          </mat-expansion-panel-header>\\r\\n          <div class=\\\"content\\\"    *ngIf=\\\"product_command.command_payments\\\" style=\\\"padding:1px\\\">\\r\\n\\r\\n            <app-payment-edit   [product_command]=\\\"product_command\\\" ></app-payment-edit>\\r\\n            <app-payment   [command]=\\\"product_command\\\" ></app-payment>\\r\\n\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <form  #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\" >\\r\\n\\r\\n\\r\\n            <mat-label>Etat de la commande</mat-label>\\r\\n            <input matInput readonly [value]='product_command.status?\\\"Livrée\\\":\\\"Non livrée\\\"'>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Fournisseur\\\" name=\\\"Provider\\\" required\\r\\n                   [matAutocomplete]=\\\"autoProvider\\\" [formControl]=\\\"providerInput\\\" (blur)=\\\"checkProvider()\\\" [readonly]=\\\"product_command._id\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-autocomplete #autoProvider=\\\"matAutocomplete\\\" [displayWith]=\\\"displayProvider\\\"\\r\\n                            (optionSelected)=\\\"providerClick($event)\\\">\\r\\n            <mat-option *ngIf=\\\"isLoadingProvider\\\" class=\\\"is-loading\\\">\\r\\n              <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n            </mat-option>\\r\\n            <ng-container *ngIf=\\\"!isLoadingProvider\\\">\\r\\n              <mat-option *ngFor=\\\"let provider of filteredProviderList\\\" [value]=\\\"provider\\\">\\r\\n                <span>{{provider.name}}</span>\\r\\n              </mat-option>\\r\\n            </ng-container>\\r\\n          </mat-autocomplete>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput [matDatepicker]=\\\"datepicker\\\" placeholder=\\\"Date de livraison\\\" [(ngModel)]=\\\"product_command.date_finalizing\\\" name=\\\"DateFinalizing\\\"    required  [readonly]=\\\"product_command._id\\\"  >\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"datepicker\\\"  *ngIf=\\\"!product_command._id\\\" ></mat-datepicker-toggle>\\r\\n            <mat-datepicker touchUi=\\\"true\\\" #datepicker></mat-datepicker>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  *ngIf=\\\"!product_command._id\\\"  [disabled]=\\\"!editForm.form.valid\\\">Effectuer la commande</button>\\r\\n\\r\\n        <button  class=\\\"btn btn-primary\\\"  *ngIf=\\\"product_command._id&&!product_command.status\\\" (click)=\\\"makeNow()\\\" >Effectuer la livraison maintenant</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Retour</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n<ol class=\\\"breadcrumb float-right\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Commandes de produits</li>\\r\\n</ol>\\r\\n<div class=\\\"card\\\">\\r\\n<div class=\\\"content\\\">\\r\\n<a [routerLink]=\\\"['../productCommands', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\r\\n    <hr>\\r\\n<mat-expansion-panel style=\\\"overflow: auto \\\"class=\\\"white-transparent\\\" style=\\\"padding :2px\\\" expanded=\\\"true\\\">\\r\\n        <mat-expansion-panel-header class=\\\"header\\\">\\r\\n<p class=\\\"lead strong\\\">\\r\\n        Filtres de recherches\\r\\n        </p>\\r\\n        <hr>\\r\\n</mat-expansion-panel-header>\\r\\n<mat-card-content class=\\\"bg-transparent\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"18px\\\" fxLayoutAlign=\\\"flex-start\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign.xs=\\\"flex-start\\\"  fxLayout=\\\"row\\\">\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">fournisseur</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"resetProviderFilter()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n<mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"Provider\\\" name=\\\"Provider\\\"\\r\\n               [matAutocomplete]=\\\"autoProvider\\\" [formControl]=\\\"providerInput\\\" (blur)=\\\"checkProvider()\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-autocomplete #autoProvider=\\\"matAutocomplete\\\" [displayWith]=\\\"displayProvider\\\"\\r\\n                        (optionSelected)=\\\"providerClick($event)\\\">\\r\\n        <mat-option *ngIf=\\\"isLoadingProvider\\\"  class=\\\"is-loading\\\">\\r\\n          <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n        </mat-option>\\r\\n        <ng-container *ngIf=\\\"!isLoadingProvider\\\">\\r\\n          <mat-option *ngFor=\\\"let provider of filteredProviderList\\\" [value]=\\\"provider\\\">\\r\\n            <span>{{provider.name}}</span>\\r\\n          </mat-option>\\r\\n        </ng-container>\\r\\n      </mat-autocomplete>\\r\\n    </mat-card-content>\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Date de livraison</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"date_finalizingFilter.reset()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n        <mat-form-field fxFlex=\\\"30\\\">\\r\\n          <input matInput [matDatepicker]=\\\"dpdate_finalizingMin\\\" placeholder=\\\"latest\\\" [formControl]=\\\"date_finalizingFilter.controls.min\\\" name=\\\"DateFinalizing\\\" >\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dpdate_finalizingMin\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker touchUi=\\\"true\\\" #dpdate_finalizingMin></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex=\\\"30\\\">\\r\\n          <input matInput [matDatepicker]=\\\"dpdate_finalizingVal\\\" placeholder=\\\"val\\\" [formControl]=\\\"date_finalizingFilter.controls.val\\\" name=\\\"DateFinalizing\\\" >\\r\\n<mat-datepicker-toggle matSuffix [for]=\\\"dpdate_finalizingVal\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker touchUi=\\\"true\\\" #dpdate_finalizingVal></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n<mat-form-field fxFlex=\\\"30\\\">\\r\\n          <input matInput [matDatepicker]=\\\"dpdate_finalizingMax\\\" placeholder=\\\"latest\\\" [formControl]=\\\"date_finalizingFilter.controls.max\\\" name=\\\"DateFinalizing\\\" >\\r\\n<mat-datepicker-toggle matSuffix [for]=\\\"dpdate_finalizingMax\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker touchUi=\\\"true\\\" #dpdate_finalizingMax></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n        <mat-card  class=\\\"white-transparent\\\">\\r\\n        <mat-card-header class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <p fxFlex class=\\\"bold\\\">Etat</p>\\r\\n<button style=\\\"border:none;background: transparent\\\"  (click)=\\\"statusFilter.reset()\\\"  fxFlex>\\r\\n          <i class=\\\"ti-reload\\\"></i>\\r\\n          </button>\\r\\n</mat-card-header>\\r\\n      <mat-card-content class=\\\"white-transparent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-label>Etat</mat-label>\\r\\n          <mat-select  [formControl]=\\\"statusFilter.controls.val\\\">\\r\\n\\r\\n            <mat-option [value]=true> Livrée</mat-option>\\r\\n\\r\\n            <mat-option [value]=false> Non livrée</mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content></mat-card>\\r\\n\\r\\n      </mat-card-content>\\r\\n      </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"product_commandList.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"_id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Id : </span>\\r\\n{{item._id}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"provider\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >fournisseur</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">fournisseur : </span>\\r\\n{{item.provider.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"manager\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Utilisateur</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Utilisateur : </span>\\r\\n{{item.manager.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"amount\\\">\\r\\n    <mat-header-cell *matHeaderCellDef mat-sort-header >Montant de la commande</mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n      <span class=\\\"mobile-label\\\">Montant </span>\\r\\n      {{item.amount|currency:\\\"FCFA\\\"}}\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n  <ng-container matColumnDef=\\\"date_finalizing\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Date de livraison</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Date de livraison : </span>\\r\\n{{item.date_finalizing|date}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Etat</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Etat : </span>\\r\\n{{item.status?\\\"Livrée\\\":\\\"Non livrée\\\"}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\"\\r\\n              *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <a [routerLink]=\\\"['../productCommands', item._id ]\\\" class=\\\"btn btn-secondary\\\">Détails</a>&nbsp;\\r\\n      <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\" *ngIf=\\\"!item.status\\\" >Supprimer</button>\\r\\n      </div>\\r\\n</mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<mat-card class=\\\"bg-primary base-card\\\"   fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\" style=\\\"width: 100%;height: 100%\\\">\\n  <mat-card class=\\\"white-transparent\\\" fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <H6>ENTETE DU BON DE COMMANDE</H6>\\n  </mat-card>\\n  <mat-card class=\\\"white-transparent\\\" fxFlex=\\\"75\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\" >\\n    <H1>ICI LE CONTENU </H1>\\n  </mat-card>\\n\\n\\n  <mat-card class=\\\"white-transparent\\\" fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n\\n    <button mat-button class=\\\"btn btn-primary\\\" (click)=\\\"print()\\\"><mat-icon class=\\\"ti-printer\\\"> </mat-icon> Imprimer </button>\\n    <button  class=\\\"btn btn-danger\\\" (click)=\\\"close()\\\"><mat-icon class=\\\"ti-close\\\"> </mat-icon> Fermer </button>\\n\\n  </mat-card>\\n\\n\\n\\n</mat-card>\\n\"","export default \"  <div style=\\\"overflow: auto \\\" class=\\\"bg-transparent\\\" *ngIf=\\\"product_command_unit\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n      <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\r\\n      <form  #editForm=\\\"ngForm\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" (ngSubmit)=\\\"add()\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\" fxFlex=\\\"30\\\">\\r\\n          <mat-form-field  class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Produit\\\" name=\\\"Product\\\"\\r\\n                   [matAutocomplete]=\\\"autoProduct\\\" [formControl]=\\\"productInput\\\" (blur)=\\\"checkProduct()\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-autocomplete #autoProduct=\\\"matAutocomplete\\\" [displayWith]=\\\"displayProduct\\\"\\r\\n          (optionSelected)=\\\"productClick($event)\\\">\\r\\n          <mat-option *ngIf=\\\"isLoadingProduct\\\" class=\\\"is-loading\\\">\\r\\n            <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\r\\n          </mat-option>\\r\\n          <ng-container *ngIf=\\\"!isLoadingProduct\\\">\\r\\n            <mat-option *ngFor=\\\"let product of filteredProductList\\\" [value]=\\\"product\\\" class=\\\"card-option\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" >\\r\\n              <mat-card-header fxFlex=\\\"30\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n                <span>{{product.name}}</span>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>\\r\\n                    Categorie\\r\\n                  </mat-label>\\r\\n                  <input matInput readonly value=\\\"{{product.category.name}}\\\" required>\\r\\n                </mat-form-field>\\r\\n\\r\\n              </mat-card-header>\\r\\n                <mat-card-content fxFlex=\\\"70\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n\\r\\n\\r\\n                </mat-card-content>\\r\\n\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </mat-option>\\r\\n          </ng-container>\\r\\n          </mat-autocomplete>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Quantité\\\" name=\\\"Quantity\\\"\\r\\n                   type=\\\"number\\\"  [(ngModel)]=\\\"product_command_unit.quantity\\\"    required >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"gs-mat-field\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n            <input matInput class=\\\"form-control\\\" placeholder=\\\"Prix d'achat unitaire\\\" name=\\\"UnitPrice\\\"\\r\\n                   type=\\\"number\\\"  [(ngModel)]=\\\"product_command_unit.unit_price\\\"   required >\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <button type=\\\"submit\\\" fxFlex=\\\"10\\\" style=\\\"height: 60%\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\" >Ajouter</button>\\r\\n\\r\\n      </form>\\r\\n\\r\\n  </div>\\r\\n\"","export default \"\\r\\n\\r\\n<div  *ngIf=\\\"dataSource.data.length > 0\\\"  class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n<mat-table class=\\\"\\\"  [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"product\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Produit</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Produit : </span>\\r\\n{{item.product_class.product.name}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"quantity\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Quantité</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Quantité : </span>\\r\\n{{item.quantity}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"unit_price\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Prix d'achat unitaire</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let item\\\" class=\\\"mobile-hide\\\">\\r\\n         <span class=\\\"mobile-label\\\">Prix d'achat unitaire : </span>\\r\\n{{item.unit_price|currency:\\\"FCFA\\\"}}\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n<ng-container matColumnDef=\\\"actions\\\" >\\r\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n    <mat-cell class=\\\"\\\" *matCellDef=\\\"let item\\\">\\r\\n<div fxLayout=\\\"row\\\" fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"!command._id\\\">\\r\\n  <button (click)=\\\"remove(item)\\\" class=\\\"btn btn-danger\\\">Retirer</button>\\r\\n</div>\\r\\n\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n\\r\\n\\r\\n  <mat-card fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" *ngIf=\\\"command.command_units_datasource.data.length>0\\\">\\r\\n    <mat-form-field fxFlex=\\\"25\\\">\\r\\n      <mat-label>\\r\\n        Montant de de la commande\\r\\n      </mat-label>\\r\\n      <input matInput readonly [value]=\\\"command.amount|currency:'FCFA'\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<ol class=\\\"breadcrumb \\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Accueil</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Nouvelle espèce</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Nouvelle Espèce </h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"test\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Id</label>\\n        {{test._id || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Nom de l'espèce</label>\\n        <input [(ngModel)]=\\\"test.name\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description de l'espèce</label>\\n        <input [(ngModel)]=\\\"test.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Enregistrer</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Annuler</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb \\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Liste des espèces</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Liste des espèces </h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Rechercher</button>\\n      <a [routerLink]=\\\"['../tests', 'new' ]\\\" class=\\\"btn btn-default\\\">Nouveau</a>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"testList.length > 0\\\">\\n  <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Nom de l'espèce</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Description de l'espèce</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of testList\\\" [class.active]=\\\"item === selectedTest\\\">\\n        \\n          <td>{{item._id}}</td>\\n          <td>{{item.name}}</td>\\n          <td>{{item.description}}</td>\\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../tests', item._id ]\\\" class=\\\"btn btn-secondary\\\">Modifier</a>&nbsp;\\n            <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".loading-indicator {\\n  position: fixed;\\n  left: 0px;\\n  top: 0px;\\n  width: 100%;\\n  height: 100%;\\n  background-color: black;\\n  opacity: 0.3;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n  position: relative;\\n  margin: 100px auto;\\n}\\n\\n.double-bounce1, .double-bounce2 {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background-color: #FFF;\\n  opacity: 0.6;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  -webkit-animation: sk-bounce 2s infinite ease-in-out;\\n  animation: sk-bounce 2s infinite ease-in-out;\\n}\\n\\n.double-bounce2 {\\n  -webkit-animation-delay: -1s;\\n  animation-delay: -1s;\\n}\\n\\n@-webkit-keyframes sk-bounce {\\n  0%, 100% {\\n    -webkit-transform: scale(0);\\n  }\\n  50% {\\n    -webkit-transform: scale(1);\\n  }\\n}\\n\\n@keyframes sk-bounce {\\n  0%, 100% {\\n    transform: scale(0);\\n    -webkit-transform: scale(0);\\n  }\\n  50% {\\n    transform: scale(1);\\n    -webkit-transform: scale(1);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQjpcXFByb2pldHNcXEdlc3Rpb24gZGUgQm91dGlxdWVcXGdzX3N0b2NrXFxBUFAvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBRUEsa0JBQUE7RUFDQSxrQkFBQTtBQ0FKOztBREdFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFFQSxvREFBQTtFQUNBLDRDQUFBO0FDREo7O0FESUU7RUFDRSw0QkFBQTtFQUNBLG9CQUFBO0FDREo7O0FESUU7RUFDRTtJQUNFLDJCQUFBO0VDREo7RURHRTtJQUNFLDJCQUFBO0VDREo7QUFDRjs7QURJRTtFQUNFO0lBQ0UsbUJBQUE7SUFDQSwyQkFBQTtFQ0ZKO0VESUU7SUFDRSxtQkFBQTtJQUNBLDJCQUFBO0VDRko7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2FkaW5nLWluZGljYXRvciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICBvcGFjaXR5OiAwLjM7XHJcbiAgfVxyXG4gIFxyXG4gIC5zcGlubmVyIHtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gIFxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAxMDBweCBhdXRvO1xyXG4gIH1cclxuICBcclxuICAuZG91YmxlLWJvdW5jZTEsIC5kb3VibGUtYm91bmNlMiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XHJcbiAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIFxyXG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNrLWJvdW5jZSAyLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xyXG4gICAgYW5pbWF0aW9uOiBzay1ib3VuY2UgMi4wcyBpbmZpbml0ZSBlYXNlLWluLW91dDtcclxuICB9XHJcbiAgXHJcbiAgLmRvdWJsZS1ib3VuY2UyIHtcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMS4wcztcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTEuMHM7XHJcbiAgfVxyXG4gIFxyXG4gIEAtd2Via2l0LWtleWZyYW1lcyBzay1ib3VuY2Uge1xyXG4gICAgMCUsIDEwMCUge1xyXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4wKVxyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMClcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyBzay1ib3VuY2Uge1xyXG4gICAgMCUsIDEwMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMCk7XHJcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjApO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xyXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wKTtcclxuICAgIH1cclxuICB9XHJcbiAgIiwiLmxvYWRpbmctaW5kaWNhdG9yIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwcHg7XG4gIHRvcDogMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgb3BhY2l0eTogMC4zO1xufVxuXG4uc3Bpbm5lciB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxMDBweCBhdXRvO1xufVxuXG4uZG91YmxlLWJvdW5jZTEsIC5kb3VibGUtYm91bmNlMiB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbiAgb3BhY2l0eTogMC42O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgLXdlYmtpdC1hbmltYXRpb246IHNrLWJvdW5jZSAycyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uOiBzay1ib3VuY2UgMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG59XG5cbi5kb3VibGUtYm91bmNlMiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMXM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTFzO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2stYm91bmNlIHtcbiAgMCUsIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuQGtleWZyYW1lcyBzay1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufSJdfQ== */\"","import { Component } from '@angular/core';\nimport {environment} from \"../environments/environment\";\nimport {AuthService} from \"./params/manager/auth/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = environment['app_name'];\n  constructor(private authService:AuthService) {\nthis.authService.loadDefaultManager();\n  }\n}\n","\n\n\n\n\n\nimport { TestModule } from './test/test.module';\nimport { GsNavModule } from './gs-nav/gs-nav.module';\n\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatToolbarModule, MatSelectModule, MatCardModule, MatInputModule, MatAutocompleteModule, MatFormFieldModule, MatDatepickerModule, MatNativeDateModule, MatListModule, MatProgressSpinnerModule, MatIconModule, MatButtonModule, MatSidenavModule, MatTabsModule } from '@angular/material';\n\n\n\nimport {ConfigurationService} from './configuration/configuration.service';\n\n\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {CategoryModule} from './stock/category/category.module';\nimport {ProductModule} from './stock/product/product.module';\nimport {CustomerModule} from \"./partners/customer/customer.module\";\nimport {ProviderModule} from \"./partners/provider/provider.module\";\nimport {ClassProductModule} from \"./stock/class_product/class-product.module\";\nimport {ManagerModule} from \"./params/manager/manager.module\";\nimport {ProductCommandModule} from \"./stock_operations/product_command/product-command.module\";\nimport {ManagerService} from \"./params/manager/manager.service\";\nimport { AuthComponent } from './params/manager/auth/auth.component';\nimport {environment} from \"../environments/environment\";\n\n\n\n;\n\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent, NavComponent,\n  ],\n  imports: [\n\n\n    BrowserModule,\n    ProductCommandModule,\n    CategoryModule,\n    ProductModule,\n\n    CustomerModule,\n    ProviderModule,\n    ClassProductModule,\n\nManagerModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    GsNavModule,\n\n    TestModule,\n\n\n\n\n  ],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: (configService: ConfigurationService) => () => {configService.loadConfigurations();},\n    deps: [ConfigurationService],\n    multi: true\n  }],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {shareReplay} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\ninterface Configuration {\n  resourceServerA: string;\n  resourceServerB: string;\n  stage: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ConfigurationService {\n\n  private readonly CONFIG_URL = 'assets/config/config.json';\n  private configuration$: Observable<Configuration>;\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public loadConfigFiles() {\n    if (!this.configuration$) {\n      this.configuration$ = this.http.get<Configuration>(this.CONFIG_URL).pipe(\n\n        shareReplay(1)\n      );\n    }\n    return this.configuration$.toPromise();\n\n  }\n\n  public  async loadConfigurations() {\n    const data= await  this.loadConfigFiles();\n    this.parseConfigurationApis(data);this.parseConfigurationMain(data);\n    console.log('fin de lecture');\n\n  }\n\n  public parseConfigurationMain(data) {\n    for (const key in data.main) {\n\n      environment[key] = data.main[key];\n    }\n\n\n\n  }\n\n  public parseConfigurationApis(data): any {\n\n      for (const key in data.api_roots) {\n      environment[key] = data.api_roots[key];\n    }\n\n\n\n  }\n\n\n\n\n\n}\n","export default \".nav {\\n  padding: 10px;\\n}\\n\\n.base {\\n  background: -webkit-gradient(linear, left top, left bottom, from(white), to(lightblue));\\n  background: linear-gradient(white, lightblue);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3MtbmF2L2Jhc2UvQjpcXFByb2pldHNcXEdlc3Rpb24gZGUgQm91dGlxdWVcXGdzX3N0b2NrXFxBUFAvc3JjXFxhcHBcXGdzLW5hdlxcYmFzZVxcYmFzZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZ3MtbmF2L2Jhc2UvYmFzZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZ3MtbmF2L2Jhc2UvQjpcXFByb2pldHNcXEdlc3Rpb24gZGUgQm91dGlxdWVcXGdzX3N0b2NrXFxBUFAvc3JjXFxhc3NldHNcXGNvbG9yLXRoZW1lc1xcZGVlcC1ibHVlXFxtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFFSSxhQUFBO0FDREo7O0FES0E7RUFFSSx1RkVUUTtFRlNSLDZDRVRRO0FETVoiLCJmaWxlIjoic3JjL2FwcC9ncy1uYXYvYmFzZS9iYXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInNyYy9hc3NldHMvY29sb3ItdGhlbWVzL2RlZXAtYmx1ZS9tYWluXCI7XHJcbi5uYXYge1xyXG5cclxuICAgIHBhZGRpbmc6MTBweDtcclxufVxyXG5cclxuXHJcbi5iYXNlIHtcclxuXHJcbiAgICBiYWNrZ3JvdW5kOiRtYWluLWNvbG9yO1xyXG59XHJcbiIsIi5uYXYge1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uYmFzZSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh3aGl0ZSwgbGlnaHRibHVlKTtcbn0iLCIkbWFpbi1jb2xvcjpsaW5lYXItZ3JhZGllbnQod2hpdGUsbGlnaHRibHVlKTtcclxuIl19 */\"","import { NavItemComponent } from './../nav-item/nav-item.component';\nimport { Component, OnInit, ContentChildren, QueryList, Input } from '@angular/core';\n\n\nenum NavPosition{\n  \"top\",\n  \"left\",\n}\n\n\n@Component({\n  selector: 'gs-nav',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n\n@Input()  private orientation:NavPosition=NavPosition.top;\n  \n@Input() private title:String;\n\n\n  @ContentChildren(NavItemComponent) navItems:QueryList <NavItemComponent>;\n\n\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { MatToolbarModule, MatSidenavModule, MatListModule, MatIconModule, MatExpansionModule } from '@angular/material';\n\nimport { GsNavRoutingModule } from './gs-nav.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseComponent } from './base/base.component';\nimport { NavItemComponent } from './nav-item/nav-item.component';\n\nimport { NgxNavbarModule } from 'ngx-bootstrap-navbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {TopNavComponent} from './top-nav/top-nav.component';\nimport {ParamComponent} from \"./param/param.component\";\nimport {MatCardModule} from \"@angular/material/card\";\n\n@NgModule({\n  declarations: [BaseComponent, NavItemComponent , TopNavComponent, ParamComponent],\n  imports: [\n    CommonModule,\n    NgxNavbarModule,\n    BrowserAnimationsModule,\n    GsNavRoutingModule,\n\n    MatExpansionModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n\n  ],\n  exports: [\n    BaseComponent, NavItemComponent, TopNavComponent\n  ],\n  entryComponents: [\n    ParamComponent\n  ]\n})\nexport class GsNavModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GsNavRoutingModule { }\r\n","export default \".nav-item {\\n  border-style: inset;\\n  border-color: gray;\\n  border-width: 0.1px;\\n  min-height: 50px;\\n}\\n\\n.active-nav-item {\\n  background-color: lightblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3MtbmF2L25hdi1pdGVtL0I6XFxQcm9qZXRzXFxHZXN0aW9uIGRlIEJvdXRpcXVlXFxnc19zdG9ja1xcQVBQL3NyY1xcYXBwXFxncy1uYXZcXG5hdi1pdGVtXFxuYXYtaXRlbS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZ3MtbmF2L25hdi1pdGVtL25hdi1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR0ksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNESjs7QURNQTtFQUNJLDJCQUFBO0FDSEoiLCJmaWxlIjoic3JjL2FwcC9ncy1uYXYvbmF2LWl0ZW0vbmF2LWl0ZW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2LWl0ZW0ge1xyXG5cclxuICAgIFxyXG4gICAgYm9yZGVyLXN0eWxlOiBpbnNldDtcclxuICAgIGJvcmRlci1jb2xvcjpncmF5O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwLjFweDtcclxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICBcclxuXHJcbn1cclxuXHJcbi5hY3RpdmUtbmF2LWl0ZW0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xyXG5cclxufSIsIi5uYXYtaXRlbSB7XG4gIGJvcmRlci1zdHlsZTogaW5zZXQ7XG4gIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgYm9yZGVyLXdpZHRoOiAwLjFweDtcbiAgbWluLWhlaWdodDogNTBweDtcbn1cblxuLmFjdGl2ZS1uYXYtaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTtcbn0iXX0= */\"","import { Component, OnInit, ContentChildren, QueryList, Input } from '@angular/core';\n\n@Component({\n  selector: 'nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss']\n})\nexport class NavItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n\n  }\n\n\n\n  sidenav_close(){\n    let body = document.getElementsByTagName('body')[0];\n      body.classList.remove('nav-open');\n    }\n\n\n\n\n  ngAfterViewInit() {\n\n  }\n\n  @Input() label;\n\n  @Input() target=null;\n\n\n  @Input() icon=\"ti-blackboard\"\n\n\n  @ContentChildren(NavItemComponent) childrenItems:QueryList<NavItemComponent>;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dzLW5hdi9wYXJhbS9wYXJhbS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-param',\n  templateUrl: './param.component.html',\n  styleUrls: ['./param.component.scss']\n})\nexport class ParamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dzLW5hdi90b3AtbmF2L3RvcC1uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {environment} from \"../../../environments/environment\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {ParamComponent} from \"../param/param.component\";\nimport {AuthService} from \"../../params/manager/auth/auth.service\";\n\n@Component({\n  selector: 'top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent implements OnInit {\n  private sidebarVisible = false;\n\n  constructor(public matDialog:MatDialog,public authService:AuthService) {\n  }\n   app_name:string=environment['app_name'];\n\n  ngOnInit(): void {\n  }\n\n  sidebarToggle() {\n    let body = document.getElementsByTagName('body')[0];\n\n    if (this.sidebarVisible == false) {\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    } else {\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n  }\n\n\n\n  public openParam(){\n\n      const dialogConfig = new MatDialogConfig();\n      // The user can't close the dialog by clicking outside its body\n\n      dialogConfig.id = \"modal-component\";\n      dialogConfig.height = \"350px\";\n      dialogConfig.width = \"600px\";\n      // https://material.angular.io/components/dialog/overview\n      const modalDialog = this.matDialog.open(ParamComponent, dialogConfig);\n\n\n  }\n    public disconnect(){\n\n        if(confirm(\"Voulez-vous vraiment vous déconnecter? Toutes les opérations non achevées seront annulées.\")){this.authService.logout();}\n\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  app_name:string;\n  constructor() {\n\n\n\n    this.app_name=environment['app_name'];\n  }\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcmFtcy9tYW5hZ2VyL2F1dGgvYXV0aC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"./auth.service\";\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  feedback: any = {};\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n  }\n\n\n  nameInput:FormControl=new FormControl();\n  passwordInput:FormControl=new FormControl();\n\n\n\nauthForm:FormGroup=new FormGroup(\n      {\n    \"name\":this.nameInput,\n    \"password\":this.passwordInput\n\n\n\n\n  }\n\n\n);\npublic submit(){\n\n    this.authService.login(this.nameInput.value,this.passwordInput.value).subscribe(\n      data=>{\n\n        if(data.length>0) {\n\n          this.feedback = {type: 'success', message: 'Connexion réussie'};\n          setTimeout(() => this.authService.active_user = data[0], 500)\n        }\n        else{\n          this.feedback = {type: 'warning', message: 'Paramètres invalides'};\n\n        }\n\n\n\n      },\n      error => {\n        this.feedback = {type: 'warning', message: \"Echec de connexion : \"+error.message};\n      }\n\n\n\n\n\n\n\n    )\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Manager} from \"../manager\";\nimport {CanActivate, Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {ManagerService} from \"../manager.service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate{\n    canActivate(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\n        if(this.active_user){\n          return true;\n        }\n\n        else{\n          this.router.navigateByUrl(\"/auth\")\n        }\n    }\n\n  constructor(private router:Router,private managerService:ManagerService) { }\n\n  active_user:Manager;\n\n\n\n\n  public loadDefaultManager() {\n    var adminId=\"5e66220a1a223c30a84866e8\";\n\n    this.active_user=new Manager();\n    this.active_user._id=adminId;\n    this.active_user.name=\"admin\";\n\n\n  }\n\n\n\n  public login(name:String,password:String){\n    return this.managerService.findByCredentials(name, password);\n  }\n\n  public logout(){\n\n    this.active_user=null;\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ManagerService } from '../manager.service';\r\nimport { Manager } from '../manager';\r\n\r\n@Component({\r\n  selector: 'app-manager-edit',\r\n  styleUrls:['./manager-edit.scss'],\r\n  templateUrl: './manager-edit.component.html'\r\n})\r\nexport class ManagerEditComponent implements OnInit {\r\nid: string;\r\n  manager: Manager;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private managerService: ManagerService,\r\n\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Manager()); }\r\n          return this.managerService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(manager => {\r\n          this.manager = manager;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n}\r\nsave() {\r\n    this.managerService.save(this.manager).subscribe(\r\n      manager => {\r\n        this.manager = manager;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/params/managers']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement  :\"+err};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/params/managers']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcmFtcy9tYW5hZ2VyL21hbmFnZXItZWRpdC9tYW5hZ2VyLWVkaXQuc2NzcyJ9 */\"","export class ManagerFilter {\n    name = '';\n    status = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { ManagerFilter } from '../manager-filter';\r\nimport { ManagerService } from '../manager.service';\r\nimport { Manager } from '../manager';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport {debounceTime, finalize, switchMap, tap} from \"rxjs/operators\";\r\n@Component({\r\n  selector: 'app-manager',\r\n  styleUrls:['./manager-list.scss'],\r\n  templateUrl: 'manager-list.component.html'\r\n})\r\nexport class ManagerListComponent implements OnInit {\r\nfilter = new ManagerFilter();\r\nselectedManager: Manager;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Manager>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','status','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n\r\n  statusFilter:GsFilter;\r\n\r\n  filteredValues: any\r\n  ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  initFilters(){\r\n\r\n\r\n\r\n\r\n\r\nthis.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n\r\n\r\n\r\n\r\nthis.statusFilter=new GsFilter();\r\n\r\n        this.statusFilter.controls.val=new FormControl();\r\n\r\n\r\n    this.filteredValues={\r\n      name:this.nameFilter.values,\r\n      status:this.statusFilter.values,      }\r\n\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n\r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (manager: Manager, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let nameCheck =true\r\n\r\n        let statusCheck =true\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!manager.name?false: manager.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            if (parsedFilters.status.val!=undefined&&parsedFilters.status.val!=null) {\r\n              statusCheck =(manager.status==null||manager.status==undefined)?false: manager.status==parsedFilters.status.val;\r\n            }\r\n\r\n\r\nreturn   nameCheck&&statusCheck&&true;\r\n     }\r\n}\r\n\r\nget managerList(): Manager[] {\r\n    return this.managerService.managerList;\r\n  }\r\nconstructor(private managerService: ManagerService,\r\n\r\n) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.managerService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<Manager>(this.managerService.managerList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: Manager): void {\r\n    this.selectedManager = selected;\r\n  }\r\ndelete(manager: Manager): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.managerService.delete(manager).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcmFtcy9tYW5hZ2VyL21hbmFnZXItbGlzdC9tYW5hZ2VyLWxpc3Quc2NzcyJ9 */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ManagerListComponent } from './manager-list/manager-list.component';\r\nimport { ManagerEditComponent } from './manager-edit/manager-edit.component';\r\nimport { ManagerService } from './manager.service';\r\nimport { MANAGER_ROUTES } from './manager.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\nimport {AuthComponent} from \"./auth/auth.component\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(MANAGER_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ManagerListComponent,\r\n    ManagerEditComponent,\r\n    AuthComponent\r\n\r\n  ],\r\n  providers: [ManagerService],\r\n  bootstrap:[AuthComponent],\r\n  exports: [AuthComponent]\r\n})\r\nexport class ManagerModule { }\r\n","import { Routes } from '@angular/router';\nimport { ManagerListComponent } from './manager-list/manager-list.component';\nimport { ManagerEditComponent } from './manager-edit/manager-edit.component';\nexport const MANAGER_ROUTES: Routes = [\n  {\n    path: 'params/managers',\n    component: ManagerListComponent\n  },\n  {\n    path: 'params/managers/:id',\n    component: ManagerEditComponent\n  }\n];\n","import { Manager } from './manager';\nimport { ManagerFilter } from './manager-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManagerService {\n  managerList: Manager[] = [];\n  api = environment.main_api+'/management/manager';\nconstructor(private http: HttpClient) {\n  }\n\n\n\n  findByCredentials(name,password): Observable<Manager[]> {\n    let params = new HttpParams();\n    const url = `${this.api}/auth`;\n  const body = { name:name, password:CryptoJS.AES.encrypt(password,environment.encrypt_key).toString(),key:environment.encrypt_key};\n\n  return this.http.post<Manager[]>(url, body,{params,headers});\n}\n\n\n\n\n\n\nfindById(id: string): Observable<Manager> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Manager>(url, {params, headers});\n  }\nload(filter: ManagerFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.managerList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ManagerFilter): Observable<Manager[]> {\n    const params = {\n      'name': filter.name,\n      'status': filter.status,\n    };\nreturn this.http.get<Manager[]>(this.api, {params, headers});\n  }\nsave(entity: Manager): Observable<Manager> {\n    let params = new HttpParams();\n    let url = '';\n\n    //Cryptage de mot de passe\n\n  entity.password=CryptoJS.AES.encrypt(entity.password,environment.encrypt_key).toString();\n\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Manager>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n\n      return this.http.post<Manager>(url, entity, {headers, params});\n    }\n  }\n\n\n\n\n\n\n\n\n\ndelete(entity: Manager): Observable<Manager> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Manager>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\nexport class Manager {\n\n  _id: string;\n  name: string;\n  password:string;\n  status: boolean;\nget display(){\n    return  \"manager_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { CustomerService } from '../customer.service';\r\nimport { Customer } from '../customer';\r\n\r\n@Component({\r\n  selector: 'app-customer-edit',\r\n  styleUrls:['./customer-edit.scss'],\r\n  templateUrl: './customer-edit.component.html'\r\n})\r\nexport class CustomerEditComponent implements OnInit {\r\nid: string;\r\n  customer: Customer;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private customerService: CustomerService,\r\n    \r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Customer()); }\r\n          return this.customerService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(customer => {\r\n          this.customer = customer;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n}\r\nsave() {\r\n    this.customerService.save(this.customer).subscribe(\r\n      customer => {\r\n        this.customer = customer;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/partners/customers']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/partners/customers']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXJzL2N1c3RvbWVyL2N1c3RvbWVyLWVkaXQvY3VzdG9tZXItZWRpdC5zY3NzIn0= */\"","export class CustomerFilter {\n    name = '';\n    status = '';\n}\n","import { ViewChild, Component, OnInit } from '@angular/core';\r\nimport { CustomerFilter } from '../customer-filter';\r\nimport { CustomerService } from '../customer.service';\r\nimport { Customer } from '../customer';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-customer',\r\n  styleUrls: ['./customer-list.scss'],\r\n  templateUrl: 'customer-list.component.html'\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\nfilter = new CustomerFilter();\r\nselectedCustomer: Customer;\r\n@ViewChild(MatPaginator, null) paginator: MatPaginator;\r\n@ViewChild(MatSort, null) sort: MatSort;\r\ndataSource: MatTableDataSource<Customer>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id', 'name', 'status', 'actions'];\r\n server_processing = false;\r\n\r\n  nameFilter: GsFilter;\r\n\r\n  statusFilter: GsFilter;\r\n\r\n  filteredValues: any;\r\ninitFilters() {\r\n\r\n        this.nameFilter = new GsFilter();\r\n\r\n        this.nameFilter.controls.val = new FormControl();\r\n\r\n\r\n        this.statusFilter = new GsFilter();\r\n\r\n        this.statusFilter.controls.val = new FormControl();\r\n\r\n\r\n        this.filteredValues = {  name: this.nameFilter.values,      status: this.statusFilter.values,      };\r\n  }\r\npublic applyFilter() {\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value; this.applyFilter(); });\r\n\r\n\r\n\r\n\r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value; this.applyFilter(); });\r\n\r\n\r\n\r\n\r\n        this.dataSource.filterPredicate =\r\n      (customer: Customer, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let nameCheck = true;\r\n\r\n        let statusCheck = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (parsedFilters.name.val) {\r\n                nameCheck = !customer.name ? false : customer.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (parsedFilters.status.val != undefined && parsedFilters.status.val != null) {\r\n              statusCheck = (customer.status == null || customer.status == undefined) ? false : customer.status == parsedFilters.status.val;\r\n            }\r\n\r\n        return   nameCheck && statusCheck && true;\r\n    };\r\n}\r\n\r\n\r\n  get customerList(): Customer[] {\r\n    return this.customerService.customerList;\r\n  }\r\nconstructor(private customerService: CustomerService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.customerService.load(this.filter).then((data) => {\r\nsetTimeout( () => {\r\n          this.dataSource = new MatTableDataSource<Customer>(this.customerService.customerList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200);\r\n});\r\n}\r\nselect(selected: Customer): void {\r\n    this.selectedCustomer = selected;\r\n  }\r\ndelete(customer: Customer): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.customerService.delete(customer).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter {\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  } = {\r\n  min: undefined,\r\n  max: undefined,\r\n  val: undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  } = {\r\n    min: null,\r\n    max: null,\r\n    val: null,\r\n};\r\n\r\nreset() {\r\n  if (this.controls.min) {this.controls.min.setValue(undefined); }\r\n  if (this.controls.max) {this.controls.max.setValue(undefined); }\r\n  if (this.controls.val) {this.controls.val.setValue(undefined); }\r\n}\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXJzL2N1c3RvbWVyL2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\r\nimport { CustomerService } from './customer.service';\r\nimport { CUSTOMER_ROUTES } from './customer.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(CUSTOMER_ROUTES)\r\n  ],\r\n  declarations: [\r\n    CustomerListComponent,\r\n    CustomerEditComponent\r\n  ],\r\n  providers: [CustomerService],\r\n  exports: []\r\n})\r\nexport class CustomerModule { }\r\n","import { Routes } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nexport const CUSTOMER_ROUTES: Routes = [\n  {\n    path: 'partners/customers',\n    component: CustomerListComponent\n  },\n  {\n    path: 'partners/customers/:id',\n    component: CustomerEditComponent\n  }\n];\n","import { Customer } from './customer';\nimport { CustomerFilter } from './customer-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class CustomerService {\n  customerList: Customer[] = [];\n  api = environment.main_api+'/partners/customer';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Customer> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Customer>(url, {params, headers});\n  }\nload(filter: CustomerFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.customerList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: CustomerFilter): Observable<Customer[]> {\n    const params = {\n      'name': filter.name,\n      'status': filter.status,\n    };\nreturn this.http.get<Customer[]>(this.api, {params, headers});\n  }\nsave(entity: Customer): Observable<Customer> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Customer>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Customer>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: Customer): Observable<Customer> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Customer>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\nexport class Customer {\n  \n  _id: string;\n  name: string;\n  status: boolean;\nget display(){\n    return  \"customer_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ProviderService } from '../provider.service';\r\nimport { Provider } from '../provider';\r\n\r\n@Component({\r\n  selector: 'app-provider-edit',\r\n  styleUrls:['./provider-edit.scss'],\r\n  templateUrl: './provider-edit.component.html'\r\n})\r\nexport class ProviderEditComponent implements OnInit {\r\nid: string;\r\n  provider: Provider;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private providerService: ProviderService,\r\n    \r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Provider()); }\r\n          return this.providerService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(provider => {\r\n          this.provider = provider;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n}\r\nsave() {\r\n    this.providerService.save(this.provider).subscribe(\r\n      provider => {\r\n        this.provider = provider;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/partners/providers']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/partners/providers']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXJzL3Byb3ZpZGVyL3Byb3ZpZGVyLWVkaXQvcHJvdmlkZXItZWRpdC5zY3NzIn0= */\"","export class ProviderFilter {\n    name = '';\n    status = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { ProviderFilter } from '../provider-filter';\r\nimport { ProviderService } from '../provider.service';\r\nimport { Provider } from '../provider';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-provider',\r\n  styleUrls:['./provider-list.scss'],\r\n  templateUrl: 'provider-list.component.html'\r\n})\r\nexport class ProviderListComponent implements OnInit {\r\nfilter = new ProviderFilter();\r\nselectedProvider: Provider;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Provider>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','status','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n  \r\n  statusFilter:GsFilter;\r\n  \r\n  filteredValues: any;\r\ninitFilters(){\r\n\r\n        this.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n        \r\n\r\n        this.statusFilter=new GsFilter();\r\n\r\n        this.statusFilter.controls.val=new FormControl();\r\n        \r\n\r\n    this.filteredValues={  name:this.nameFilter.values,      status:this.statusFilter.values,      }\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n    \r\n      \r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n      \r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n\r\n    this.dataSource.filterPredicate =\r\n      (provider: Provider, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n      \r\n        let nameCheck =true\r\n          \r\n        let statusCheck =true\r\n          \r\n      \r\n        \r\n\r\n          \r\n\r\n\r\n\r\n        \r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!provider.name?false: provider.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n              \r\n        \r\n\r\n          \r\n\r\n          \r\n            if (parsedFilters.status.val!=undefined&&parsedFilters.status.val!=null) {\r\n              statusCheck =(provider.status==null||provider.status==undefined)?false: provider.status==parsedFilters.status.val;\r\n            }\r\n            \r\n      return   nameCheck&&statusCheck&&true;\r\n    }\r\n}\r\n\r\n\r\n  get providerList(): Provider[] {\r\n    return this.providerService.providerList;\r\n  }\r\nconstructor(private providerService: ProviderService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.providerService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<Provider>(this.providerService.providerList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: Provider): void {\r\n    this.selectedProvider = selected;\r\n  }\r\ndelete(provider: Provider): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.providerService.delete(provider).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\n\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXJzL3Byb3ZpZGVyL3Byb3ZpZGVyLWxpc3QvcHJvdmlkZXItbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ProviderListComponent } from './provider-list/provider-list.component';\r\nimport { ProviderEditComponent } from './provider-edit/provider-edit.component';\r\nimport { ProviderService } from './provider.service';\r\nimport { PROVIDER_ROUTES } from './provider.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(PROVIDER_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ProviderListComponent,\r\n    ProviderEditComponent\r\n  ],\r\n  providers: [ProviderService],\r\n  exports: []\r\n})\r\nexport class ProviderModule { }\r\n","import { Routes } from '@angular/router';\nimport { ProviderListComponent } from './provider-list/provider-list.component';\nimport { ProviderEditComponent } from './provider-edit/provider-edit.component';\nexport const PROVIDER_ROUTES: Routes = [\n  {\n    path: 'partners/providers',\n    component: ProviderListComponent\n  },\n  {\n    path: 'partners/providers/:id',\n    component: ProviderEditComponent\n  }\n];\n","import { Provider } from './provider';\nimport { ProviderFilter } from './provider-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class ProviderService {\n  providerList: Provider[] = [];\n  api = environment.main_api+'/partners/provider';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Provider> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Provider>(url, {params, headers});\n  }\nload(filter: ProviderFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.providerList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ProviderFilter): Observable<Provider[]> {\n    const params = {\n      'name': filter.name,\n      'status': filter.status,\n    };\nreturn this.http.get<Provider[]>(this.api, {params, headers});\n  }\nsave(entity: Provider): Observable<Provider> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Provider>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Provider>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: Provider): Observable<Provider> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Provider>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\nexport class Provider {\n  \n  _id: string;\n  name: string;\n  status: boolean;\nget display(){\n    return  \"provider_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { CategoryService } from '../category.service';\r\nimport { Category } from '../category';\r\n\r\n@Component({\r\n  selector: 'app-category-edit',\r\n  styleUrls:['./category-edit.scss'],\r\n  templateUrl: './category-edit.component.html'\r\n})\r\nexport class CategoryEditComponent implements OnInit {\r\nid: string;\r\n  category: Category;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private categoryService: CategoryService,\r\n\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Category()); }\r\n          return this.categoryService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(category => {\r\n          this.category = category;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement '};\r\n        }\r\n      );\r\n\r\n}\r\nsave() {\r\n    this.categoryService.save(this.category).subscribe(\r\n      category => {\r\n        this.category = category;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/stock/categories']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement : \"+err.message};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/stock/categories']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL2NhdGVnb3J5L2NhdGVnb3J5LWVkaXQvY2F0ZWdvcnktZWRpdC5zY3NzIn0= */\"","export class CategoryFilter {\n    name = '';\n    description = '';\n    status = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { CategoryFilter } from '../category-filter';\r\nimport { CategoryService } from '../category.service';\r\nimport { Category } from '../category';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-category',\r\n  styleUrls:['./category-list.scss'],\r\n  templateUrl: 'category-list.component.html'\r\n})\r\nexport class CategoryListComponent implements OnInit {\r\nfilter = new CategoryFilter();\r\nselectedCategory: Category;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Category>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','description','status','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n  \r\n  descriptionFilter:GsFilter;\r\n  \r\n  statusFilter:GsFilter;\r\n  \r\n  filteredValues: any;\r\ninitFilters(){\r\n\r\n        this.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n        \r\n\r\n        this.descriptionFilter=new GsFilter();\r\n\r\n        this.descriptionFilter.controls.val=new FormControl();\r\n        \r\n\r\n        this.statusFilter=new GsFilter();\r\n\r\n        this.statusFilter.controls.val=new FormControl();\r\n        \r\n\r\n    this.filteredValues={  name:this.nameFilter.values,      description:this.descriptionFilter.values,      status:this.statusFilter.values,      }\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n    \r\n      \r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n      \r\n        this.descriptionFilter.controls.val.valueChanges.subscribe((value) => {this.descriptionFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n      \r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value;this.applyFilter();});\r\n        \r\n\r\n      \r\n\r\n    this.dataSource.filterPredicate =\r\n      (category: Category, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n      \r\n        let nameCheck =true\r\n          \r\n        let descriptionCheck =true\r\n          \r\n        let statusCheck =true\r\n          \r\n      \r\n        \r\n\r\n          \r\n\r\n        \r\n\r\n        \r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!category.name?false: category.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n              \r\n        \r\n\r\n          \r\n\r\n        \r\n\r\n        \r\n              if (parsedFilters.description.val) {\r\n                descriptionCheck =!category.name?false: category.description.toLowerCase().includes(parsedFilters.description.val.toLowerCase());\r\n              }\r\n              \r\n        \r\n\r\n          \r\n              if (parsedFilters.status.val) {\r\n                statusCheck =!category.status?false:category.status==parsedFilters.status.val;\r\n              }\r\n        \r\n      return   nameCheck&&descriptionCheck&&statusCheck&&true;\r\n    }\r\n}\r\n\r\n\r\n  get categoryList(): Category[] {\r\n    return this.categoryService.categoryList;\r\n  }\r\nconstructor(private categoryService: CategoryService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.categoryService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<Category>(this.categoryService.categoryList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: Category): void {\r\n    this.selectedCategory = selected;\r\n  }\r\ndelete(category: Category): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.categoryService.delete(category).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\n\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL2NhdGVnb3J5L2NhdGVnb3J5LWxpc3QvY2F0ZWdvcnktbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { CategoryEditComponent } from './category-edit/category-edit.component';\r\nimport { CategoryService } from './category.service';\r\nimport { CATEGORY_ROUTES } from './category.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(CATEGORY_ROUTES)\r\n  ],\r\n  declarations: [\r\n    CategoryListComponent,\r\n    CategoryEditComponent\r\n  ],\r\n  providers: [CategoryService],\r\n  exports: []\r\n})\r\nexport class CategoryModule { }\r\n","import { Routes } from '@angular/router';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { CategoryEditComponent } from './category-edit/category-edit.component';\nexport const CATEGORY_ROUTES: Routes = [\n  {\n    path: 'stock/categories',\n    component: CategoryListComponent\n  },\n  {\n    path: 'stock/categories/:id',\n    component: CategoryEditComponent\n  }\n];\n","import { Category } from './category';\nimport { CategoryFilter } from './category-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class CategoryService {\n  categoryList: Category[] = [];\n  api = environment.main_api+'/stock/category';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Category> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Category>(url, {params, headers});\n  }\nload(filter: CategoryFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.categoryList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: CategoryFilter): Observable<Category[]> {\n    const params = {\n      'name': filter.name,\n      'description': filter.description,\n      'status': filter.status,\n    };\nreturn this.http.get<Category[]>(this.api, {params, headers});\n  }\nsave(entity: Category): Observable<Category> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Category>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Category>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: Category): Observable<Category> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Category>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\nexport class Category {\n  \n  _id: string;\n  name: string;\n  description: string;\n  status: boolean;\nget display(){\n    return  \"category_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ClassProductService } from '../class-product.service';\r\nimport { ClassProduct } from '../class-product';\r\n\r\n  import { ProductService } from \"src/app/stock/product/product.service\";\r\nimport { Product} from \"src/app/stock/product/product\";\r\nimport { ProductFilter} from \"src/app/stock/product/product-filter\";\r\n\r\n@Component({\r\n  selector: 'app-class-product-edit',\r\n  styleUrls:['./class-product-edit.scss'],\r\n  templateUrl: './class-product-edit.component.html'\r\n})\r\nexport class ClassProductEditComponent implements OnInit {\r\nid: string;\r\n  class_product: ClassProduct;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private class_productService: ClassProductService,\r\n     private productService: ProductService,\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new ClassProduct()); }\r\n          return this.class_productService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(class_product => {\r\n          this.class_product = class_product;\r\n\r\n          if(this.class_product._id)this.productInput.setValue(this.class_product.product);\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n        this.configureProductInput()\r\n\r\n}\r\nsave() {\r\n    this.class_productService.save(this.class_product).subscribe(\r\n      class_product => {\r\n        this.class_product = class_product;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/stock/classProducts']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/stock/classProducts']);\r\n  }\r\n\r\nfilteredProductList:Product[]=new Array<Product>();\r\n  productInput:FormControl;\r\n  selectedProduct:Product;\r\n  isLoadingProduct=false;\r\nproductClick(event: any) {\r\n    this.selectedProduct= event.option.value;\r\n  }\r\ncheckProduct() {\r\n    if (!this.selectedProduct|| this.selectedProduct!== this.productInput.value) {\r\n      this.productInput.setValue(null);\r\n      this.selectedProduct= null;\r\n      return;\r\n    }\r\n    this.class_product.product=this.selectedProduct;\r\n  }\r\ndisplayProduct(product:Product) {\r\nif (product) return product.name;\r\n}\r\n  configureProductInput(){\r\n    this.productInput=new FormControl();\r\nthis.productInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingProduct= true;}),\r\n      switchMap(value => this.productService.find(new ProductFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingProduct= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Product);\r\n      this.filteredProductList=resultList;}))\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL2NsYXNzX3Byb2R1Y3QvY2xhc3MtcHJvZHVjdC1lZGl0L2NsYXNzLXByb2R1Y3QtZWRpdC5zY3NzIn0= */\"","export class ClassProductFilter {\n    product = '';\n    label = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { ClassProductFilter } from '../class-product-filter';\r\nimport { ClassProductService } from '../class-product.service';\r\nimport { ClassProduct } from '../class-product';\r\n\r\n  import { ProductService } from \"src/app/stock/product/product.service\";\r\n  import { Product} from \"src/app/stock/product/product\";\r\n  import { ProductFilter} from \"src/app/stock/product/product-filter\";\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport {debounceTime, finalize, switchMap, tap} from \"rxjs/operators\";\r\n@Component({\r\n  selector: 'app-class-product',\r\n  styleUrls:['./class-product-list.scss'],\r\n  templateUrl: 'class-product-list.component.html'\r\n})\r\nexport class ClassProductListComponent implements OnInit {\r\nfilter = new ClassProductFilter();\r\nselectedClassProduct: ClassProduct;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<ClassProduct>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['product','label','unit_price','quantity','status','date_intrance','actions'];\r\n server_processing:boolean=false;\r\n\r\n  productFilter:GsFilter;\r\n\r\n  labelFilter:GsFilter;\r\n\r\n  filteredValues: any\r\n  ;\r\n\r\n\r\n\r\n      filteredProductList:Product[]=new Array<Product>();\r\n      productInput:FormControl;\r\n      selectedProduct:Product;\r\n      isLoadingProduct=false;\r\n      productClick(event: any) {\r\n        this.selectedProduct= event.option.value;\r\n        this.applyFilter();\r\n      }\r\n      checkProduct() {\r\n        if (!this.selectedProduct|| this.selectedProduct!== this.productInput.value) {\r\n          this.productInput.setValue(null);\r\n          this.selectedProduct= null;\r\n          return;\r\n        }\r\n\r\n      }\r\n      resetProductFilter(){\r\n        this.selectedProduct=null ;\r\n        this.productInput.setValue(this.selectedProduct);\r\n        this.applyFilter();\r\n      }\r\n      displayProduct(product:Product) {\r\n        if (product) return product\r\n      }\r\n      configureProductInput(){\r\n        this.productInput=new FormControl();\r\n        this.productInput.valueChanges\r\n          .pipe(\r\n            debounceTime(500),\r\n            tap(() => {this.isLoadingProduct= true;}),\r\n            switchMap(value => this.productService.find(new ProductFilter())\r\n              .pipe(\r\n                finalize(() => this.isLoadingProduct= false),\r\n              )\r\n            )\r\n          )\r\n          .subscribe((resultList =>{\r\n            caster.arrayCast(resultList,Product);\r\n            this.filteredProductList=resultList;}))\r\n      }\r\n\r\n\r\n\r\n\r\n  initFilters(){\r\n\r\nthis.labelFilter=new GsFilter();\r\n        this.labelFilter.controls.val=new FormControl();\r\n    this.filteredValues={   product: this.selectedProduct,\r\n      label:this.labelFilter.values,      }\r\n\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n\r\n\r\n        this.labelFilter.controls.val.valueChanges.subscribe((value) => {this.labelFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (class_product: ClassProduct, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let productCheck =true\r\n\r\n        let labelCheck =true\r\n\r\n        let statutCheck=class_product.status;\r\n\r\n\r\n\r\n\r\n\r\n\r\n          productCheck =(this.selectedProduct)?(this.selectedProduct._id==class_product.product._id):true;\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.label.val) {\r\n                labelCheck =!class_product.label?false: class_product.label.toLowerCase().includes(parsedFilters.label.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\nreturn   productCheck&&labelCheck&&statutCheck&&true;\r\n     }\r\n}\r\n\r\nget class_productList(): ClassProduct[] {\r\n    return this.class_productService.class_productList;\r\n  }\r\nconstructor(private class_productService: ClassProductService,\r\n   private productService: ProductService,\r\n) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n\r\n      this.configureProductInput();\r\n\r\n\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.class_productService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<ClassProduct>(this.class_productService.class_productList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n          this.applyFilter()  },\r\n        200)\r\n})\r\n}\r\nselect(selected: ClassProduct): void {\r\n    this.selectedClassProduct = selected;\r\n  }\r\ndelete(class_product: ClassProduct): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.class_productService.delete(class_product).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL2NsYXNzX3Byb2R1Y3QvY2xhc3MtcHJvZHVjdC1saXN0L2NsYXNzLXByb2R1Y3QtbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ClassProductListComponent } from './class-product-list/class-product-list.component';\r\nimport { ClassProductEditComponent } from './class-product-edit/class-product-edit.component';\r\nimport { ClassProductService } from './class-product.service';\r\nimport { CLASS_PRODUCT_ROUTES } from './class-product.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(CLASS_PRODUCT_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ClassProductListComponent,\r\n    ClassProductEditComponent\r\n  ],\r\n  providers: [ClassProductService],\r\n  exports: []\r\n})\r\nexport class ClassProductModule { }\r\n","import { Routes } from '@angular/router';\nimport { ClassProductListComponent } from './class-product-list/class-product-list.component';\nimport { ClassProductEditComponent } from './class-product-edit/class-product-edit.component';\nexport const CLASS_PRODUCT_ROUTES: Routes = [\n  {\n    path: 'stock/classProducts',\n    component: ClassProductListComponent\n  },\n  {\n    path: 'stock/classProducts/:id',\n    component: ClassProductEditComponent\n  }\n];\n","import { ClassProduct } from './class-product';\nimport { ClassProductFilter } from './class-product-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class ClassProductService {\n  class_productList: ClassProduct[] = [];\n  api = environment.main_api+'/stock/product_class';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<ClassProduct> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<ClassProduct>(url, {params, headers});\n  }\nload(filter: ClassProductFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.class_productList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ClassProductFilter): Observable<ClassProduct[]> {\n    const params = {\n      'product': filter.product,\n      'label': filter.label,\n    };\nreturn this.http.get<ClassProduct[]>(this.api, {params, headers});\n  }\nsave(entity: ClassProduct): Observable<ClassProduct> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<ClassProduct>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<ClassProduct>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: ClassProduct): Observable<ClassProduct> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<ClassProduct>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n    \n  import { Product} from   \"src/app/stock/product/product\";\n  \nexport class ClassProduct {\n  \n  _id: string;\n  product: Product;\n  label: string;\n  unit_price: number;\n  date_intrance: Date;\n  quantity: number;\n  status: boolean;\nget display(){\n    return  \"class_product_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product';\r\n\r\n  import { CategoryService } from \"src/app/stock/category/category.service\";\r\nimport { Category} from \"src/app/stock/category/category\";\r\nimport { CategoryFilter} from \"src/app/stock/category/category-filter\";\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  styleUrls:['./product-edit.scss'],\r\n  templateUrl: './product-edit.component.html'\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\nid: string;\r\n  product: Product;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private productService: ProductService,\r\n     private categoryService: CategoryService,\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Product()); }\r\n          return this.productService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(product => {\r\n          this.product = product;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n        this.configureCategoryInput()\r\n\r\n}\r\nsave() {\r\n    this.productService.save(this.product).subscribe(\r\n      product => {\r\n        this.product = product;\r\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/stock/products']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/stock/products']);\r\n  }\r\n\r\nfilteredCategoryList:Category[]=new Array<Category>();\r\n  categoryInput:FormControl;\r\n  selectedCategory:Category;\r\n  isLoadingCategory=false;\r\ncategoryClick(event: any) {\r\n    this.selectedCategory= event.option.value;\r\n  }\r\ncheckCategory() {\r\n    if (!this.selectedCategory|| this.selectedCategory!== this.categoryInput.value) {\r\n      this.categoryInput.setValue(null);\r\n      this.selectedCategory= null;\r\n      return;\r\n    }\r\n    this.product.category=this.selectedCategory;\r\n  }\r\ndisplayCategory(category:Category) {\r\nif (category) return category.name\r\n}\r\n  configureCategoryInput(){\r\n    this.categoryInput=new FormControl();\r\nthis.categoryInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingCategory= true;}),\r\n      switchMap(value => this.categoryService.find(new CategoryFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingCategory= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Category);\r\n      this.filteredCategoryList=resultList;}))\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL3Byb2R1Y3QvcHJvZHVjdC1lZGl0L3Byb2R1Y3QtZWRpdC5zY3NzIn0= */\"","export class ProductFilter {\n    name = '';\n    description = '';\n    unit_price = '';\n    status = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { ProductFilter } from '../product-filter';\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-product',\r\n  styleUrls:['./product-list.scss'],\r\n  templateUrl: 'product-list.component.html'\r\n})\r\nexport class ProductListComponent implements OnInit {\r\nfilter = new ProductFilter();\r\nselectedProduct: Product;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Product>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['_id','name','description','category','unit_price','status','actions'];\r\n server_processing:boolean=false;\r\n\r\n  nameFilter:GsFilter;\r\n\r\n  descriptionFilter:GsFilter;\r\n\r\n  unit_priceFilter:GsFilter;\r\n\r\n  statusFilter:GsFilter;\r\n\r\n  filteredValues: any;\r\ninitFilters(){\r\n\r\n        this.nameFilter=new GsFilter();\r\n\r\n        this.nameFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.descriptionFilter=new GsFilter();\r\n\r\n        this.descriptionFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.unit_priceFilter=new GsFilter();\r\n\r\nthis.unit_priceFilter.controls.min=new FormControl();\r\nthis.unit_priceFilter.controls.max=new FormControl();\r\nthis.unit_priceFilter.controls.val=new FormControl();\r\n\r\n\r\n        this.statusFilter=new GsFilter();\r\n\r\n        this.statusFilter.controls.val=new FormControl();\r\n\r\n\r\n    this.filteredValues={  name:this.nameFilter.values,      description:this.descriptionFilter.values,      unit_price:this.unit_priceFilter.values,      status:this.statusFilter.values,      }\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n        this.nameFilter.controls.val.valueChanges.subscribe((value) => {this.nameFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.descriptionFilter.controls.val.valueChanges.subscribe((value) => {this.descriptionFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n        this.unit_priceFilter.controls.val.valueChanges.subscribe((value)=>{this.unit_priceFilter.values.val=value;this.applyFilter();})\r\n        this.unit_priceFilter.controls.min.valueChanges.subscribe((value)=>{this.unit_priceFilter.values.min=value;this.applyFilter();})\r\n        this.unit_priceFilter.controls.max.valueChanges.subscribe((value)=>{this.unit_priceFilter.values.max=value;this.applyFilter();})\r\n\r\n\r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (product: Product, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let nameCheck =true\r\n\r\n        let descriptionCheck =true\r\n\r\n        let unit_priceCheck =true\r\n\r\n        let statusCheck =true\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.name.val) {\r\n                nameCheck =!product.name?false: product.name.toLowerCase().includes(parsedFilters.name.val.toLowerCase());\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              if (parsedFilters.description.val) {\r\n                descriptionCheck =!product.name?false: product.description.toLowerCase().includes(parsedFilters.description.val.toLowerCase());\r\n              }\r\n\r\n\r\n          if (parsedFilters.unit_price.val) {\r\n            unit_priceCheck =!product.unit_price?false:product.unit_price==parsedFilters.unit_price.val;\r\n          } else {\r\n            if (parsedFilters.unit_price.min) {\r\n              unit_priceCheck = unit_priceCheck && (parsedFilters.unit_price.min<= product.unit_price);\r\n            }\r\n            if (parsedFilters.unit_price.max) {\r\n              unit_priceCheck = unit_priceCheck && (parsedFilters.unit_price.max >= product.unit_price);\r\n            }\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parsedFilters.status.val!=undefined&&parsedFilters.status.val!=null) {\r\n              statusCheck =(product.status==null||product.status==undefined)?false: product.status==parsedFilters.status.val;\r\n            }\r\n\r\n      return   nameCheck&&descriptionCheck&&unit_priceCheck&&statusCheck&&true;\r\n    }\r\n}\r\n\r\n\r\n  get productList(): Product[] {\r\n    return this.productService.productList;\r\n  }\r\nconstructor(private productService: ProductService) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.productService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<Product>(this.productService.productList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: Product): void {\r\n    this.selectedProduct = selected;\r\n  }\r\ndelete(product: Product): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.productService.delete(product).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\n\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL3Byb2R1Y3QvcHJvZHVjdC1saXN0L3Byb2R1Y3QtbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\nimport { ProductService } from './product.service';\r\nimport { PRODUCT_ROUTES } from './product.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(PRODUCT_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductEditComponent\r\n  ],\r\n  providers: [ProductService],\r\n  exports: []\r\n})\r\nexport class ProductModule { }\r\n","import { Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nexport const PRODUCT_ROUTES: Routes = [\n  {\n    path: 'stock/products',\n    component: ProductListComponent\n  },\n  {\n    path: 'stock/products/:id',\n    component: ProductEditComponent\n  }\n];\n","import { Product } from './product';\nimport { ProductFilter } from './product-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class ProductService {\n  productList: Product[] = [];\n  api = environment.main_api+'/stock/product';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Product> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Product>(url, {params, headers});\n  }\nload(filter: ProductFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.productList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ProductFilter): Observable<Product[]> {\n    const params = {\n      'name': filter.name,\n      'description': filter.description,\n      'unit_price': filter.unit_price,\n      'status': filter.status,\n    };\nreturn this.http.get<Product[]>(this.api, {params, headers});\n  }\nsave(entity: Product): Observable<Product> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Product>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Product>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: Product): Observable<Product> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Product>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n    \n  import { Category} from   \"src/app/stock/category/category\";\n  \nexport class Product {\n  \n  _id: string;\n  name: string;\n  description: string;\n  category: Category;\n  unit_price: number;\n  status: boolean;\nget display(){\n    return  \"product_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { PaymentService } from '../payment.service';\r\nimport { Payment } from '../payment';\r\n\r\n  import { ManagerService } from \"src/app/params/manager/manager.service\";\r\nimport { Manager} from \"src/app/params/manager/manager\";\r\nimport { ManagerFilter} from \"src/app/params/manager/manager-filter\";\r\n\r\n  import { ProductCommandService } from \"src/app/stock_operations/product_command/product-command.service\";\r\nimport { ProductCommand} from \"src/app/stock_operations/product_command/product-command\";\r\nimport { ProductCommandFilter} from \"src/app/stock_operations/product_command/product-command-filter\";\r\nimport {AuthService} from \"../../../params/manager/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-payment-edit',\r\n  styleUrls:['./payment-edit.scss'],\r\n  templateUrl: './payment-edit.component.html'\r\n})\r\nexport class PaymentEditComponent implements OnInit {\r\nid: string;\r\namountInput:FormControl=new FormControl();\r\ndateInput:FormControl=new FormControl();\r\n@Input()\r\nproduct_command:ProductCommand;\r\n\r\npayment: Payment;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private paymentService: PaymentService,\r\n     private managerService:ManagerService,\r\n     private authService: AuthService,  private product_commandService: ProductCommandService,\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n\r\n  this.payment=new Payment()   ;\r\n    this.configureManagerInput()\r\n    this.configureProductCommandInput()\r\n  this.configureAmountInput();\r\n    this.configureDateInput();\r\n}\r\n\r\n\r\n\r\nconfigureAmountInput(){\r\n\r\n  let minAmount=1;\r\n  let maxAmount=this.product_command.amount-this.product_command.amount_payment;\r\n\r\n  this.payment.amount=maxAmount;\r\n  this.amountInput.setValidators( [Validators.max(maxAmount), Validators.min(minAmount)])\r\n\r\n\r\n}\r\n\r\n\r\nconfigureDateInput(){\r\n\r\n  this.payment.date=new Date();\r\n}\r\n\r\nsave() {\r\n  this.payment.product_command=this.product_command;\r\n  this.payment.manager=this.authService.active_user;\r\n    this.paymentService.save(this.payment).subscribe(\r\n      payment => {\r\n        this.payment = payment;\r\n        this.feedback = {type: 'success', message: 'Payment effectué avec succès'};\r\n        this.ngOnInit();\r\n        setTimeout(() => {\r\n          this.feedback={};\r\n          ProductCommand.addPayment(payment,this.product_command);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement du paiement : \"+err.message};\r\n      }\r\n    );\r\n  }\r\ncancel() {\r\n    this.router.navigate(['/stock_operations/payments']);\r\n  }\r\n\r\nfilteredManagerList:Manager[]=new Array<Manager>();\r\n  managerInput:FormControl;\r\n  selectedManager:Manager;\r\n  isLoadingManager=false;\r\nmanagerClick(event: any) {\r\n    this.selectedManager= event.option.value;\r\n  }\r\ncheckManager() {\r\n    if (!this.selectedManager|| this.selectedManager!== this.managerInput.value) {\r\n      this.managerInput.setValue(null);\r\n      this.selectedManager= null;\r\n      return;\r\n    }\r\n    this.payment.manager=this.selectedManager;\r\n  }\r\ndisplayManager(manager:Manager) {\r\nif (manager) return manager\r\n}\r\n  configureManagerInput(){\r\n    this.managerInput=new FormControl();\r\nthis.managerInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingManager= true;}),\r\n      switchMap(value => this.managerService.find(new ManagerFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingManager= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Manager);\r\n      this.filteredManagerList=resultList;}))\r\n}\r\n\r\nfilteredProductCommandList:ProductCommand[]=new Array<ProductCommand>();\r\n  product_commandInput:FormControl;\r\n  selectedProductCommand:ProductCommand;\r\n  isLoadingProductCommand=false;\r\nproduct_commandClick(event: any) {\r\n    this.selectedProductCommand= event.option.value;\r\n  }\r\ncheckProductCommand() {\r\n    if (!this.selectedProductCommand|| this.selectedProductCommand!== this.product_commandInput.value) {\r\n      this.product_commandInput.setValue(null);\r\n      this.selectedProductCommand= null;\r\n      return;\r\n    }\r\n    this.payment.product_command=this.selectedProductCommand;\r\n  }\r\ndisplayProductCommand(product_command:ProductCommand) {\r\nif (product_command) return product_command\r\n}\r\n  configureProductCommandInput(){\r\n    this.product_commandInput=new FormControl();\r\nthis.product_commandInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingProductCommand= true;}),\r\n      switchMap(value => this.product_commandService.find(new ProductCommandFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingProductCommand= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,ProductCommand);\r\n      this.filteredProductCommandList=resultList;}))\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcGF5bWVudC9wYXltZW50LWVkaXQvcGF5bWVudC1lZGl0LnNjc3MifQ== */\"","export class PaymentFilter {\n  command:string;\n}\n","import {ViewChild, Component, OnInit, Input} from '@angular/core';\r\nimport { PaymentFilter } from '../payment-filter';\r\nimport { PaymentService } from '../payment.service';\r\nimport { Payment } from '../payment';\r\n\r\n  import { ManagerService } from \"src/app/params/manager/manager.service\";\r\n  import { Manager} from \"src/app/params/manager/manager\";\r\n  import { ManagerFilter} from \"src/app/params/manager/manager-filter\";\r\n\r\n  import { ProductCommandService } from \"src/app/stock_operations/product_command/product-command.service\";\r\n  import { ProductCommand} from \"src/app/stock_operations/product_command/product-command\";\r\n  import { ProductCommandFilter} from \"src/app/stock_operations/product_command/product-command-filter\";\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport {debounceTime, finalize, switchMap, tap} from \"rxjs/operators\";\r\n@Component({\r\n  selector: 'app-payment',\r\n  styleUrls:['./payment-list.scss'],\r\n  templateUrl: 'payment-list.component.html'\r\n})\r\nexport class PaymentListComponent implements OnInit {\r\nfilter = new PaymentFilter();\r\nselectedPayment: Payment;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<Payment>;\r\n  @Input()\r\n  command:ProductCommand;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['amount','date','manager'];\r\n server_processing:boolean=false;\r\n\r\n  filteredValues: any\r\n  ;\r\n\r\n\r\n\r\n  initFilters(){\r\n\r\n\r\n\r\n    this.filteredValues={  }\r\n\r\n  }\r\n\r\n\r\n\r\n  initData() : void {\r\n\r\n    console.log(this.command.command_payments);\r\n    this.dataSource = this.command.command_payments;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.enableFiltering()\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (payment: Payment, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n\r\n\r\nreturn   true;\r\n     }\r\n}\r\n\r\nget paymentList(): Payment[] {\r\n    return this.paymentService.paymentList;\r\n  }\r\nconstructor(private paymentService: PaymentService,\r\n\r\n) {\r\n}\r\nngOnInit() {\r\n\r\n\r\n\r\n  this.initData();\r\n  this.initFilters();\r\n\r\n\r\n}\r\nngAfterViewInit() {\r\n\r\n  }\r\nsearch(): void {\r\n          this.enableFiltering();\r\n          this.initData();\r\n}\r\n\r\nselect(selected: Payment): void {\r\n    this.selectedPayment = selected;\r\n  }\r\ndelete(payment: Payment): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.paymentService.delete(payment).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcGF5bWVudC9wYXltZW50LWxpc3QvcGF5bWVudC1saXN0LnNjc3MifQ== */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { PaymentListComponent } from './payment-list/payment-list.component';\r\nimport { PaymentEditComponent } from './payment-edit/payment-edit.component';\r\nimport { PaymentService } from './payment.service';\r\nimport { PAYMENT_ROUTES } from './payment.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(PAYMENT_ROUTES)\r\n  ],\r\n  declarations: [\r\n    PaymentListComponent,\r\n    PaymentEditComponent\r\n  ],\r\n  providers: [PaymentService],\r\n  exports: [\r\n    PaymentListComponent,\r\n    PaymentEditComponent\r\n  ]\r\n})\r\nexport class PaymentModule { }\r\n","import { Routes } from '@angular/router';\nimport { PaymentListComponent } from './payment-list/payment-list.component';\nimport { PaymentEditComponent } from './payment-edit/payment-edit.component';\nexport const PAYMENT_ROUTES: Routes = [\n  {\n    path: 'stock_operations/payments',\n    component: PaymentListComponent\n  },\n  {\n    path: 'stock_operations/payments/:id',\n    component: PaymentEditComponent\n  }\n];\n","import { Payment } from './payment';\nimport { PaymentFilter } from './payment-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class PaymentService {\n  paymentList: Payment[] = [];\n  api = environment.main_api+'/payment/payment_command';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<Payment> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Payment>(url, {params, headers});\n  }\nload(filter: PaymentFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.paymentList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: PaymentFilter): Observable<Payment[]> {\n  const url= `${this.api}/${filter.command}`;\n\n\n  const params =new HttpParams().set(\"command\",filter.command);\nreturn this.http.get<Payment[]>(url, {params, headers});\n  }\nsave(entity: Payment): Observable<Payment> {\n  console.log(entity);\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Payment>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n\n      var pmt:any=new Object();\n      Object.assign(pmt,entity);\n      pmt.product_command=pmt.product_command._id;\n      return this.http.post<Payment>(url, pmt, {headers, params});\n    }\n  }\ndelete(entity: Payment): Observable<Payment> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Payment>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n\n  import { Manager} from   \"src/app/params/manager/manager\";\n\n\n  import { ProductCommand} from   \"src/app/stock_operations/product_command/product-command\";\n\nexport class Payment {\n\n  _id: string;\n  date: Date;\n  manager: Manager;\n  amount:number;\n  product_command: ProductCommand;\n  status: boolean;\nget display(){\n    return  \"payment_display\"; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ProductCommandService } from '../product-command.service';\r\nimport { ProductCommand } from '../product-command';\r\n\r\nimport { ProviderService } from \"src/app/partners/provider/provider.service\";\r\nimport { Provider} from \"src/app/partners/provider/provider\";\r\nimport { ProviderFilter} from \"src/app/partners/provider/provider-filter\";\r\nimport {ProductCommandUnit} from \"../product_command_unit/product-command-unit\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {ProductCommandUnitService} from \"../product_command_unit/product-command-unit.service\";\r\nimport {ProductCommandUnitFilter} from \"../product_command_unit/product-command-unit-filter\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {ProductCommandPrintComponent} from \"../product-command-print/product-command-print.component\";\r\nimport {ProductCommandListComponent} from \"../product-command-list/product-command-list.component\";\r\nimport {PaymentService} from \"../../payment/payment.service\";\r\nimport {PaymentFilter} from \"../../payment/payment-filter\";\r\nimport {Payment} from \"../../payment/payment\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-command-edit',\r\n  styleUrls:['./product-command-edit.scss'],\r\n  templateUrl: './product-command-edit.component.html'\r\n})\r\nexport class ProductCommandEditComponent implements OnInit {\r\n  id: string;\r\n  product_command: ProductCommand=new ProductCommand();\r\n\r\n  feedback: any = {};\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private product_commandService: ProductCommandService,\r\n    private providerService: ProviderService,\r\n    private pcu_service:ProductCommandUnitService,\r\n    private paymentService:PaymentService,\r\n    private matDialog:MatDialog,\r\n\r\n        )\r\n  {}\r\n\r\n\r\n\r\n\r\n\r\n  visualize() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    // The user can't close the dialog by clicking outside its body\r\n    dialogConfig.disableClose = false;\r\n    dialogConfig.id = \"modal-component\";\r\n    dialogConfig.height = \"90vh\";\r\n    dialogConfig.width = \"60vh\";\r\n    // https://material.angular.io/components/dialog/overview\r\n    const modalDialog = this.matDialog.open(ProductCommandPrintComponent, dialogConfig);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new ProductCommand()); }\r\n          return this.product_commandService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(product_command => {\r\n          this.product_command=product_command;\r\n\r\n\r\n          if(!product_command._id) this.product_command.command_units_datasource=new MatTableDataSource<ProductCommandUnit>(new Array<ProductCommandUnit>());\r\n\r\n          else {\r\n\r\n\r\n\r\n           var filter=new ProductCommandUnitFilter();\r\n           filter.command=this.product_command._id\r\n\r\n            this.pcu_service.find(filter).subscribe(data=>{\r\n              this.product_command.command_units_datasource=new MatTableDataSource<ProductCommandUnit>(data);\r\n              ProductCommand.calculateAmount(this.product_command);\r\n              this.providerInput.setValue(this.product_command.provider);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            },error=>this.feedback = {type: 'warning', message: 'Erreur lors du chargement des produits de la commande'})\r\n\r\n\r\n            var filter2=new PaymentFilter();\r\n            filter2.command=this.product_command._id;\r\n\r\n            this.paymentService.find(filter2).subscribe(data=>{\r\n                this.product_command.command_payments=new MatTableDataSource<Payment>(data);\r\n\r\n                ProductCommand.calculateAmountPayement(this.product_command);\r\n\r\n                }\r\n\r\n              ,error=>this.feedback = {type: 'warning', message: 'Erreur lors de la liste des paiements'})\r\n\r\n\r\n\r\n\r\n\r\n          this.feedback = {};\r\n        }},\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\r\n        }\r\n      );\r\n\r\n    this.configureProviderInput()\r\n\r\n  }\r\n  save() {\r\n\r\n    this.product_commandService.save(this.product_command).subscribe(\r\n      product_command => {\r\n        this.product_command = product_command;\r\n        this.feedback = {type: 'success', message: 'Commmande enregistrée avec succès; La livraison est prévue pour le :'+product_command.date_finalizing};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/stock_operations/productCommands']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement : \"+err};\r\n      }\r\n    );\r\n  }\r\n  cancel() {\r\n    this.router.navigate(['/stock_operations/productCommands']);\r\n  }\r\n\r\n  filteredProviderList:Provider[]=new Array<Provider>();\r\n  providerInput:FormControl;\r\n  selectedProvider:Provider;\r\n  isLoadingProvider=false;\r\n  providerClick(event: any) {\r\n    this.selectedProvider= event.option.value;\r\n  }\r\n  checkProvider() {\r\n        if(this.product_command._id)return;\r\n    if (!this.selectedProvider|| this.selectedProvider!== this.providerInput.value) {\r\n      this.providerInput.setValue(null);\r\n      this.selectedProvider= null;\r\n      return;\r\n    }\r\n    this.product_command.provider=this.selectedProvider;\r\n  }\r\n  displayProvider(provider:Provider) {\r\n    if (provider) return provider.name;\r\n  }\r\n  configureProviderInput(){\r\n    this.providerInput=new FormControl();\r\n    this.providerInput.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {this.isLoadingProvider= true;}),\r\n        switchMap(value => this.providerService.find(new ProviderFilter())\r\n          .pipe(\r\n            finalize(() => this.isLoadingProvider= false),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((resultList =>{\r\n        caster.arrayCast(resultList,Provider);\r\n        this.filteredProviderList=resultList;}))\r\n  }\r\n\r\n\r\n\r\n  public makeNow(){\r\n    if(!confirm(\"Voulez vous vraiment effectuer la livraison de cette commande maintenant? \"))return;\r\n    this.product_commandService.save(this.product_command).subscribe(\r\n      product_command => {\r\n        this.product_command = product_command;\r\n        this.feedback = {type: 'success', message: 'Livraison effectuée avec succès '+this.product_command.date_finalizing};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/stock_operations/productCommands']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.product_command.status=false;\r\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement : \"+err};\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcHJvZHVjdF9jb21tYW5kL3Byb2R1Y3QtY29tbWFuZC1lZGl0L3Byb2R1Y3QtY29tbWFuZC1lZGl0LnNjc3MifQ== */\"","export class ProductCommandFilter {\n    provider = '';\n    date_finalizing = '';\n    status = '';\n}\n","import { ViewChild,Component, OnInit } from '@angular/core';\r\nimport { ProductCommandFilter } from '../product-command-filter';\r\nimport { ProductCommandService } from '../product-command.service';\r\nimport { ProductCommand } from '../product-command';\r\n\r\n  import { ProviderService } from \"src/app/partners/provider/provider.service\";\r\n  import { Provider} from \"src/app/partners/provider/provider\";\r\n  import { ProviderFilter} from \"src/app/partners/provider/provider-filter\";\r\n\r\n  import { ManagerService } from \"src/app/params/manager/manager.service\";\r\n  import { Manager} from \"src/app/params/manager/manager\";\r\n  import { ManagerFilter} from \"src/app/params/manager/manager-filter\";\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport {debounceTime, finalize, switchMap, tap} from \"rxjs/operators\";\r\n@Component({\r\n  selector: 'app-product-command',\r\n  styleUrls:['./product-command-list.scss'],\r\n  templateUrl: 'product-command-list.component.html'\r\n})\r\nexport class ProductCommandListComponent implements OnInit {\r\nfilter = new ProductCommandFilter();\r\nselectedProductCommand: ProductCommand;\r\n@ViewChild(MatPaginator,null) paginator: MatPaginator;\r\n@ViewChild(MatSort,null) sort: MatSort;\r\ndataSource: MatTableDataSource<ProductCommand>;\r\n feedback: any = {};\r\n displayedColumns: string[] = ['provider','manager','amount','date_finalizing','status','actions'];\r\n server_processing:boolean=false;\r\n\r\n  providerFilter:GsFilter;\r\n\r\n  date_finalizingFilter:GsFilter;\r\n\r\n  statusFilter:GsFilter;\r\n\r\n  filteredValues: any\r\n  ;\r\n\r\n\r\n\r\n      filteredProviderList:Provider[]=new Array<Provider>();\r\n      providerInput:FormControl;\r\n      selectedProvider:Provider;\r\n      isLoadingProvider=false;\r\n      providerClick(event: any) {\r\n        this.selectedProvider= event.option.value;\r\n        this.applyFilter();\r\n      }\r\n      checkProvider() {\r\n        if (!this.selectedProvider|| this.selectedProvider!== this.providerInput.value) {\r\n          this.providerInput.setValue(null);\r\n          this.selectedProvider= null;\r\n          return;\r\n        }\r\n\r\n      }\r\n      resetProviderFilter(){\r\n        this.selectedProvider=null ;\r\n        this.providerInput.setValue(this.selectedProvider);\r\n        this.applyFilter();\r\n      }\r\n      displayProvider(provider:Provider) {\r\n        if (provider) return provider.name;\r\n      }\r\n      configureProviderInput(){\r\n        this.providerInput=new FormControl();\r\n        this.providerInput.valueChanges\r\n          .pipe(\r\n            debounceTime(500),\r\n            tap(() => {this.isLoadingProvider= true;}),\r\n            switchMap(value => this.providerService.find(new ProviderFilter())\r\n              .pipe(\r\n                finalize(() => this.isLoadingProvider= false),\r\n              )\r\n            )\r\n          )\r\n          .subscribe((resultList =>{\r\n            caster.arrayCast(resultList,Provider);\r\n            this.filteredProviderList=resultList;}))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  initFilters(){\r\n\r\n\r\n\r\n\r\n\r\n\r\nthis.date_finalizingFilter=new GsFilter();\r\n\r\nthis.date_finalizingFilter.controls.min=new FormControl();\r\nthis.date_finalizingFilter.controls.max=new FormControl();\r\nthis.date_finalizingFilter.controls.val=new FormControl();\r\n\r\n\r\n\r\n\r\nthis.statusFilter=new GsFilter();\r\n\r\n        this.statusFilter.controls.val=new FormControl();\r\n\r\n\r\n    this.filteredValues={   provider: this.selectedProvider,\r\n      date_finalizing:this.date_finalizingFilter.values,\r\n      status:this.statusFilter.values,      }\r\n\r\n  }\r\npublic applyFilter(){\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n\r\n\r\n        this.date_finalizingFilter.controls.val.valueChanges.subscribe((value)=>{this.date_finalizingFilter.values.val=value;this.applyFilter();})\r\n        this.date_finalizingFilter.controls.min.valueChanges.subscribe((value)=>{this.date_finalizingFilter.values.min=value;this.applyFilter();})\r\n        this.date_finalizingFilter.controls.max.valueChanges.subscribe((value)=>{this.date_finalizingFilter.values.max=value;this.applyFilter();})\r\n\r\n\r\n\r\n        this.statusFilter.controls.val.valueChanges.subscribe((value) => {this.statusFilter.values.val = value;this.applyFilter();});\r\n\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (product_command: ProductCommand, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n        let providerCheck =true\r\n\r\n        let date_finalizingCheck =true\r\n\r\n        let statusCheck =true\r\n\r\n\r\n\r\n\r\n\r\n\r\n          providerCheck =(this.selectedProvider)?(this.selectedProvider._id==product_command.provider._id):true;\r\n\r\n\r\n          if (parsedFilters.date_finalizing.val) {\r\n            date_finalizingCheck =!product_command.date_finalizing?false:product_command.date_finalizing==parsedFilters.date_finalizing.val;\r\n          } else {\r\n            if (parsedFilters.date_finalizing.min) {\r\n              date_finalizingCheck = date_finalizingCheck && (parsedFilters.date_finalizing.min<= product_command.date_finalizing);\r\n            }\r\n            if (parsedFilters.date_finalizing.max) {\r\n              date_finalizingCheck = date_finalizingCheck && (parsedFilters.date_finalizing.max >= product_command.date_finalizing);\r\n            }\r\n          }\r\n\r\n\r\n\r\n\r\n            if (parsedFilters.status.val!=undefined&&parsedFilters.status.val!=null) {\r\n              statusCheck =(product_command.status==null||product_command.status==undefined)?false: product_command.status==parsedFilters.status.val;\r\n            }\r\n\r\n\r\nreturn   providerCheck&&date_finalizingCheck&&statusCheck&&true;\r\n     }\r\n}\r\n\r\nget product_commandList(): ProductCommand[] {\r\n    return this.product_commandService.product_commandList;\r\n  }\r\nconstructor(private product_commandService: ProductCommandService,\r\n   private providerService: ProviderService,\r\n) {\r\n}\r\nngOnInit() {\r\nthis.initFilters();\r\n\r\n      this.configureProviderInput()\r\n\r\n\r\n}\r\nngAfterViewInit() {\r\n    this.search();\r\n  }\r\nsearch(): void {\r\n    this.product_commandService.load(this.filter).then((data)=>{\r\nsetTimeout( ()=>{\r\n          this.dataSource=new MatTableDataSource<ProductCommand>(this.product_commandService.product_commandList);\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering();\r\n},\r\n        200)\r\n})\r\n}\r\nselect(selected: ProductCommand): void {\r\n    this.selectedProductCommand = selected;\r\n  }\r\ndelete(product_command: ProductCommand): void {\r\n    if (confirm('Etes-vous sûr?')) {\r\n      this.product_commandService.delete(product_command).subscribe(() => {\r\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\r\n          setTimeout(() => {\r\n            this.search();\r\n          }, 1000);\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\nexport class GsFilter{\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  }={\r\n  min:undefined,\r\n  max:undefined,\r\n  val:undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  }={\r\n    min:null,\r\n    max:null,\r\n    val:null,\r\n}\r\nreset(){\r\n  if (this.controls.min)this.controls.min.setValue(undefined);\r\n  if(this.controls.max)this.controls.max.setValue(undefined);\r\n  if(this.controls.val)this.controls.val.setValue(undefined);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcHJvZHVjdF9jb21tYW5kL3Byb2R1Y3QtY29tbWFuZC1saXN0L3Byb2R1Y3QtY29tbWFuZC1saXN0LnNjc3MifQ== */\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcHJvZHVjdF9jb21tYW5kL3Byb2R1Y3QtY29tbWFuZC1wcmludC9wcm9kdWN0LWNvbW1hbmQtcHJpbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-product-command-print',\n  templateUrl: './product-command-print.component.html',\n  styleUrls: ['./product-command-print.component.scss']\n})\nexport class ProductCommandPrintComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ProductCommandPrintComponent>) {\n\n\n  }\n\n  close() {\n\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ProductCommandListComponent } from './product-command-list/product-command-list.component';\r\nimport { ProductCommandEditComponent } from './product-command-edit/product-command-edit.component';\r\nimport { ProductCommandService } from './product-command.service';\r\nimport { PRODUCT_COMMAND_ROUTES } from './product-command.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule,MatFormFieldModule,MatTableModule,MatPaginatorModule,MatSortModule, MatCheckboxModule, MatRadioModule ,MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\nimport {ProductCommandUnitModule} from \"./product_command_unit/product-command-unit.module\";\r\nimport { ProductCommandPrintComponent } from './product-command-print/product-command-print.component';\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {PaymentModule} from \"../payment/payment.module\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProductCommandUnitModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,MatPaginatorModule,MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule ,\r\n  PaymentModule,\r\n    FormsModule,\r\n    RouterModule.forChild(PRODUCT_COMMAND_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ProductCommandListComponent,\r\n    ProductCommandEditComponent,\r\n    ProductCommandPrintComponent\r\n  ],\r\n  entryComponents:[ProductCommandPrintComponent],\r\n  providers: [ProductCommandService],\r\n  exports: []\r\n})\r\nexport class ProductCommandModule { }\r\n","import { Routes } from '@angular/router';\nimport { ProductCommandListComponent } from './product-command-list/product-command-list.component';\nimport { ProductCommandEditComponent } from './product-command-edit/product-command-edit.component';\nexport const PRODUCT_COMMAND_ROUTES: Routes = [\n  {\n    path: 'stock_operations/productCommands',\n    component: ProductCommandListComponent\n  },\n  {\n    path: 'stock_operations/productCommands/:id',\n    component: ProductCommandEditComponent\n  }\n];\n","import { ProductCommand } from './product-command';\nimport { ProductCommandFilter } from './product-command-filter';\nimport { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport {ProductCommandUnitService} from \"./product_command_unit/product-command-unit.service\";\nimport {ClassProductService} from \"../../stock/class_product/class-product.service\";\nimport {ManagerService} from \"../../params/manager/manager.service\";\nimport {AuthService} from \"../../params/manager/auth/auth.service\";\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class ProductCommandService {\n  product_commandList: ProductCommand[] = [];\n  api = environment.main_api+'/stock_operations/product_command';\nconstructor(private http: HttpClient,private pcu_service:ProductCommandUnitService,stock_service:ClassProductService,private authService:AuthService) {\n  }\nfindById(id: string): Observable<ProductCommand> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<ProductCommand>(url, {params, headers});\n  }\nload(filter: ProductCommandFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.product_commandList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ProductCommandFilter): Observable<ProductCommand[]> {\n    const params = {\n      'provider': filter.provider,\n      'date_finalizing': filter.date_finalizing,\n      'status': filter.status,\n    };\nreturn this.http.get<ProductCommand[]>(this.api, {params, headers});\n  }\nsave(command: ProductCommand): Observable<ProductCommand> {\n    var entity=new ProductCommand();\n    Object.assign(entity,command);\n    entity.command_units_datasource=null;\n    entity.manager=this.authService.active_user;\n    entity.command_units=command.command_units_datasource.data;\n      entity.date_initiating=new Date();\n\n\n\n  let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      entity.status=true;\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<ProductCommand>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n\n       return this.http.post<ProductCommand>(url, entity, {headers, params})\n    }\n  }\ndelete(entity: ProductCommand): Observable<ProductCommand> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<ProductCommand>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n\n  import { Provider} from   'src/app/partners/provider/provider';\n\n\n  import { Manager} from   'src/app/params/manager/manager';\n  import {ProductCommandUnit} from './product_command_unit/product-command-unit';\n  import {MatTableDataSource} from '@angular/material/table';\n  import {Payment} from \"../payment/payment\";\n\n\n\n  export class ProductCommand {\n\n  _id: string;\n  provider: Provider;\n  manager: Manager;\n  date_finalizing: Date;\n  date_initiating:Date;\n  command_units;\n  command_units_datasource: MatTableDataSource<ProductCommandUnit>=new MatTableDataSource(new Array<ProductCommandUnit>());\n  command_payments:MatTableDataSource<Payment>=new MatTableDataSource<Payment>(new Array<Payment>());\n\n  amount:number=0;\n  status: boolean;\nget display() {\n    return  'product_command_display'; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n\n\n  public add(product_command_unit:ProductCommandUnit){\n\n    this.command_units_datasource.data.push(product_command_unit);\n    this.command_units_datasource._updateChangeSubscription();\n    this.amount+=product_command_unit.unit_price*product_command_unit.quantity;\n\n    console.log(this.command_units_datasource.data);\n\n  }\n\n\n  public remove(product_command_unit:ProductCommandUnit){\n      const index=this.command_units_datasource.data.indexOf(product_command_unit);\n      this.command_units_datasource.data.splice(index,1);\n      this.command_units_datasource._updateChangeSubscription();\n\n    this.amount-=product_command_unit.unit_price*product_command_unit.quantity;\n\n    }\n\n    public static calculateAmount(product_command) {\n\n\n      product_command.amount = 0;\n      for (var pcu of product_command.command_units_datasource.data) {\n        product_command.amount += pcu.quantity * pcu.unit_price;\n      }\n\n\n    }\n\n  public amount_payment:number=0;\n\n    public static calculateAmountPayement(product_command) {\n\n\n      product_command.amount_payment = 0;\n      for (var py of product_command.command_payments.data) {\n        product_command.amount_payment += py.amount;\n      }\n\n    }\n\n    public static addPayment(payment:Payment,command:ProductCommand){\n      command.command_payments.data.push(payment);\n      ProductCommand.calculateAmountPayement(this);\n      command.command_payments._updateChangeSubscription();\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, switchMap, debounceTime, tap, finalize } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nconst caster=require('angular-crud/gs-cast');\r\nimport { ProductCommandUnitService } from '../product-command-unit.service';\r\nimport { ProductCommandUnit } from '../product-command-unit';\r\n\r\n  import { ProductService } from \"src/app/stock/product/product.service\";\r\nimport { Product} from \"src/app/stock/product/product\";\r\nimport { ProductFilter} from \"src/app/stock/product/product-filter\";\r\n\r\n  import { ProductCommandService } from \"src/app/stock_operations/product_command/product-command.service\";\r\nimport { ProductCommand} from \"src/app/stock_operations/product_command/product-command\";\r\nimport { ProductCommandFilter} from \"src/app/stock_operations/product_command/product-command-filter\";\r\n\r\n@Component({\r\n  selector: 'app-product-command-unit-edit',\r\n  styleUrls:['./product-command-unit-edit.scss'],\r\n  templateUrl: './product-command-unit-edit.component.html'\r\n})\r\nexport class ProductCommandUnitEditComponent implements OnInit {\r\nid: string;\r\n  product_command_unit: ProductCommandUnit;\r\n\r\n  @Input()\r\n  product_command:ProductCommand;\r\n  feedback: any = {};\r\nconstructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private product_command_unitService: ProductCommandUnitService,\r\n     private productService: ProductService,  private product_commandService: ProductCommandService,\r\n    )\r\n    {\r\n  }\r\nngOnInit() {\r\n\r\n      this.product_command_unit=new ProductCommandUnit();\r\n        this.configureProductInput()\r\n\r\n        this.configureProductCommandInput();\r\n\r\n}\r\nadd() {\r\n    this.product_command.add(this.product_command_unit);\r\n   this.ngOnInit();\r\n}\r\ncancel() {\r\n    this.router.navigate(['/stock_operations/product_command/productCommandUnits']);\r\n  }\r\n\r\nfilteredProductList:Product[]=new Array<Product>();\r\n  productInput:FormControl;\r\n  selectedProduct:Product;\r\n  isLoadingProduct=false;\r\nproductClick(event: any) {\r\n    this.selectedProduct= event.option.value;\r\n  }\r\ncheckProduct() {\r\n    if (!this.selectedProduct|| this.selectedProduct!== this.productInput.value) {\r\n      this.productInput.setValue(null);\r\n      this.selectedProduct= null;\r\n      return;\r\n    }\r\n    this.product_command_unit.product_class.product=this.selectedProduct;\r\n  }\r\ndisplayProduct(product:Product) {\r\nif (product) return product.name;\r\n}\r\n  configureProductInput(){\r\n    this.productInput=new FormControl();\r\nthis.productInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingProduct= true;}),\r\n      switchMap(value => this.productService.find(new ProductFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingProduct= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,Product);\r\n      this.filteredProductList=resultList;}))\r\n}\r\n\r\nfilteredProductCommandList:ProductCommand[]=new Array<ProductCommand>();\r\n  product_commandInput:FormControl;\r\n  selectedProductCommand:ProductCommand;\r\n  isLoadingProductCommand=false;\r\nproduct_commandClick(event: any) {\r\n    this.selectedProductCommand= event.option.value;\r\n  }\r\ncheckProductCommand() {\r\n    if (!this.selectedProductCommand|| this.selectedProductCommand!== this.product_commandInput.value) {\r\n      this.product_commandInput.setValue(null);\r\n      this.selectedProductCommand= null;\r\n      return;\r\n    }\r\n\r\n  }\r\ndisplayProductCommand(product_command:ProductCommand) {\r\nif (product_command) return product_command\r\n}\r\n  configureProductCommandInput(){\r\n    this.product_commandInput=new FormControl();\r\nthis.product_commandInput.valueChanges\r\n    .pipe(\r\n      debounceTime(500),\r\n      tap(() => {this.isLoadingProductCommand= true;}),\r\n      switchMap(value => this.product_commandService.find(new ProductCommandFilter())\r\n      .pipe(\r\n        finalize(() => this.isLoadingProductCommand= false),\r\n        )\r\n        )\r\n      )\r\n    .subscribe((resultList =>{\r\n      caster.arrayCast(resultList,ProductCommand);\r\n      this.filteredProductCommandList=resultList;}))\r\n}\r\n\r\n}\r\n","export default \".card-option {\\n  height: 100px;\\n}\\n\\n.card-option div {\\n  border-width: 0.5px;\\n  border-color: darkslategrey;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvY2tfb3BlcmF0aW9ucy9wcm9kdWN0X2NvbW1hbmQvcHJvZHVjdF9jb21tYW5kX3VuaXQvcHJvZHVjdC1jb21tYW5kLXVuaXQtZWRpdC9COlxcUHJvamV0c1xcR2VzdGlvbiBkZSBCb3V0aXF1ZVxcZ3Nfc3RvY2tcXEFQUC9zcmNcXGFwcFxcc3RvY2tfb3BlcmF0aW9uc1xccHJvZHVjdF9jb21tYW5kXFxwcm9kdWN0X2NvbW1hbmRfdW5pdFxccHJvZHVjdC1jb21tYW5kLXVuaXQtZWRpdFxccHJvZHVjdC1jb21tYW5kLXVuaXQtZWRpdC5zY3NzIiwic3JjL2FwcC9zdG9ja19vcGVyYXRpb25zL3Byb2R1Y3RfY29tbWFuZC9wcm9kdWN0X2NvbW1hbmRfdW5pdC9wcm9kdWN0LWNvbW1hbmQtdW5pdC1lZGl0L3Byb2R1Y3QtY29tbWFuZC11bml0LWVkaXQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNBLGFBQUE7QUNDQTs7QURHQTtFQUVFLG1CQUFBO0VBQ0EsMkJBQUE7QUNERiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcHJvZHVjdF9jb21tYW5kL3Byb2R1Y3RfY29tbWFuZF91bml0L3Byb2R1Y3QtY29tbWFuZC11bml0LWVkaXQvcHJvZHVjdC1jb21tYW5kLXVuaXQtZWRpdC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtb3B0aW9uIHtcclxuaGVpZ2h0OjEwMHB4O1xyXG5cclxufVxyXG5cclxuLmNhcmQtb3B0aW9uIGRpdiB7XHJcblxyXG4gIGJvcmRlci13aWR0aDogMC41cHg7XHJcbiAgYm9yZGVyLWNvbG9yOiBkYXJrc2xhdGVncmV5O1xyXG5cclxufVxyXG5cclxuLmNhcmQtb3B0aW9uIDpob3ZlciB7XHJcblxyXG59XHJcbiIsIi5jYXJkLW9wdGlvbiB7XG4gIGhlaWdodDogMTAwcHg7XG59XG5cbi5jYXJkLW9wdGlvbiBkaXYge1xuICBib3JkZXItd2lkdGg6IDAuNXB4O1xuICBib3JkZXItY29sb3I6IGRhcmtzbGF0ZWdyZXk7XG59Il19 */\"","export class ProductCommandUnitFilter {\n  command:string;\n\n}\n","import {ViewChild, Component, OnInit, Input} from '@angular/core';\r\nimport { ProductCommandUnitFilter } from '../product-command-unit-filter';\r\nimport { ProductCommandUnitService } from '../product-command-unit.service';\r\nimport { ProductCommandUnit } from '../product-command-unit';\r\n\r\nimport { ProductService } from 'src/app/stock/product/product.service';\r\nimport { Product} from 'src/app/stock/product/product';\r\nimport { ProductFilter} from 'src/app/stock/product/product-filter';\r\n\r\nimport { ProductCommandService } from 'src/app/stock_operations/product_command/product-command.service';\r\nimport { ProductCommand} from 'src/app/stock_operations/product_command/product-command';\r\nimport { ProductCommandFilter} from 'src/app/stock_operations/product_command/product-command-filter';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nconst caster = require('angular-crud/gs-cast');\r\nimport {debounceTime, finalize, switchMap, tap} from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-product-command-unit',\r\n  styleUrls: ['./product-command-unit-list.scss'],\r\n  templateUrl: 'product-command-unit-list.component.html'\r\n})\r\nexport class ProductCommandUnitListComponent implements OnInit {\r\nfilter = new ProductCommandUnitFilter();\r\nselectedProductCommandUnit: ProductCommandUnit;\r\n@ViewChild(MatPaginator, null) paginator: MatPaginator;\r\n@ViewChild(MatSort, null) sort: MatSort;\r\n\r\n\r\n\r\n  dataSource: MatTableDataSource<ProductCommandUnit>;\r\n feedback: any = {};\r\n displayedColumns: string[] = [ 'product',  'quantity', 'unit_price', 'actions'];\r\n server_processing = false;\r\n\r\n  filteredValues: any;\r\n\r\n  @Input()\r\n  command:ProductCommand;\r\n\r\n  initFilters() {\r\n\r\n\r\n\r\n    this.filteredValues = {  };\r\n\r\n  }\r\npublic applyFilter() {\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n  }\r\npublic  enableFiltering() {\r\n\r\n\r\n    this.dataSource.filterPredicate =\r\n      (product_command_unit: ProductCommandUnit, filters: string) => {\r\n        const parsedFilters = JSON.parse(filters);\r\n\r\n\r\n\r\n        return   true;\r\n     };\r\n}\r\n\r\nget product_command_unitList(): ProductCommandUnit[] {\r\n    return this.product_command_unitService.product_command_unitList;\r\n  }\r\nconstructor(private product_command_unitService: ProductCommandUnitService,\r\n\r\n) {\r\n\r\n\r\n\r\n}\r\nngOnInit(){\r\n\r\n  this.initData();\r\nthis.initFilters()\r\n\r\n}\r\nngAfterViewInit() {\r\n  }\r\n\r\ninitData() : void {\r\n\r\n\r\n          this.dataSource = this.command.command_units_datasource;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.enableFiltering()\r\n\r\n\r\n};\r\nselect(selected: ProductCommandUnit) : void {\r\n    this.selectedProductCommandUnit = selected;\r\n  };\r\nremove(product_command_unit : ProductCommandUnit ): void {\r\n  if(! confirm(\"Voulez-vous vraiment supprimer?\"))return;\r\nthis.command.remove(product_command_unit);\r\n\r\n\r\n};\r\n}\r\nexport class GsFilter {\r\nvalues: {\r\n    min: any;\r\n    max: any;\r\n    val: any;\r\n  } = {\r\n  min: undefined,\r\n  max: undefined,\r\n  val: undefined,\r\n};\r\ncontrols: {\r\n    min: FormControl;\r\n    max: FormControl;\r\n    val: FormControl;\r\n  } = {\r\n    min: null,\r\n    max: null,\r\n    val: null,\r\n};\r\nreset() {\r\n  if (this.controls.min) {this.controls.min.setValue(undefined) }\r\n  if (this.controls.max) {this.controls.max.setValue(undefined) }\r\n  if (this.controls.val) {this.controls.val.setValue(undefined) }\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrX29wZXJhdGlvbnMvcHJvZHVjdF9jb21tYW5kL3Byb2R1Y3RfY29tbWFuZF91bml0L3Byb2R1Y3QtY29tbWFuZC11bml0LWxpc3QvcHJvZHVjdC1jb21tYW5kLXVuaXQtbGlzdC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ProductCommandUnitListComponent } from './product-command-unit-list/product-command-unit-list.component';\r\nimport { ProductCommandUnitEditComponent } from './product-command-unit-edit/product-command-unit-edit.component';\r\nimport { ProductCommandUnitService } from './product-command-unit.service';\r\nimport { PRODUCT_COMMAND_UNIT_ROUTES } from './product-command-unit.routes';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatAutocompleteModule, MatSpinner, MatProgressSpinnerModule, MatInputModule,\r\n  MatCardModule, MatFormFieldModule, MatTableModule, MatPaginatorModule, MatSortModule, MatCheckboxModule, MatRadioModule , MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatExpansionModule} from '@angular/material';\r\nimport Module = WebAssembly.Module;\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTableModule, MatPaginatorModule, MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    RouterModule.forChild(PRODUCT_COMMAND_UNIT_ROUTES)\r\n  ],\r\n  declarations: [\r\n    ProductCommandUnitListComponent,\r\n    ProductCommandUnitEditComponent\r\n  ],\r\n  providers: [ProductCommandUnitService],\r\n  exports: [ProductCommandUnitEditComponent, ProductCommandUnitListComponent]\r\n})\r\nexport class ProductCommandUnitModule { }\r\n","import { Routes } from '@angular/router';\nimport { ProductCommandUnitListComponent } from './product-command-unit-list/product-command-unit-list.component';\nimport { ProductCommandUnitEditComponent } from './product-command-unit-edit/product-command-unit-edit.component';\nexport const PRODUCT_COMMAND_UNIT_ROUTES: Routes = [\n  {\n    path: 'stock_operations/product_command/productCommandUnits',\n    component: ProductCommandUnitListComponent\n  },\n  {\n    path: 'stock_operations/product_command/productCommandUnits/:id',\n    component: ProductCommandUnitEditComponent\n  }\n];\n","import { ProductCommandUnit } from './product-command-unit';\nimport { ProductCommandUnitFilter } from './product-command-unit-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n@Injectable()\nexport class ProductCommandUnitService {\n  product_command_unitList: ProductCommandUnit[] = [];\n  api = environment.main_api+'/stock_operations/product_command_unit';\nconstructor(private http: HttpClient) {\n  }\nfindById(id: string): Observable<ProductCommandUnit> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<ProductCommandUnit>(url, {params, headers});\n  }\nload(filter: ProductCommandUnitFilter): any {\nvar p=this;\n    return new Promise(function (resolve, reject) {\np.find(filter).subscribe(result => {\n          p.product_command_unitList = result;\n          resolve(true);\n        },\n        err => {\nreject(err)\n          console.error('error loading', err);\n        }\n      );\n    });\n  }\nfind(filter: ProductCommandUnitFilter): Observable<ProductCommandUnit[]> {\n\n\n\n         const url= `${this.api}/${filter.command}`;\n  const params =new HttpParams().set(\"command\",filter.command);\nreturn this.http.get<ProductCommandUnit[]>(url, {params, headers})\n\n\n  ;\n  }\nsave(entity: ProductCommandUnit): Observable<ProductCommandUnit> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<ProductCommandUnit>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<ProductCommandUnit>(url, entity, {headers, params});\n    }\n  }\ndelete(entity: ProductCommandUnit): Observable<ProductCommandUnit> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<ProductCommandUnit>(url, {headers, params});\n    }\n    return null;\n  }\n}\n","\n\n\n  import { Product} from   'src/app/stock/product/product';\n\n\n  import { ProductCommand} from   'src/app/stock_operations/product_command/product-command';\n  import {ClassProduct} from \"../../../stock/class_product/class-product\";\n\n  export class ProductCommandUnit {\n\n  _id: string;\n\n  product_class: ClassProduct=new ClassProduct();\n  quantity: number;\n  unit_price: number;\n  date_delivrance: Date;\n  status: boolean;\nget display() {\n    return  'product_command_unit_display'; // Remplacer avec la chaine que vous souhaitez afficher\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { TestService } from '../test.service';\nimport { Test } from '../test';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-test-edit',\n  templateUrl: './test-edit.component.html'\n})\nexport class TestEditComponent implements OnInit {\n\n  id: string;\n  test: Test;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private testService: TestService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Test()); }\n          return this.testService.findById(id);\n        })\n      )\n      .subscribe(test => {\n          this.test = test;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Erreur lors du chargement'};\n        }\n      );\n  }\n\n  save() {\n    this.testService.save(this.test).subscribe(\n      test => {\n        this.test = test;\n        this.feedback = {type: 'success', message: 'Enregistrement effectué avec succès'};\n        setTimeout(() => {\n          this.router.navigate(['/tests']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: \"Erreur lors de l'enregistrement\"};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/tests']);\n  }\n}\n","export class TestFilter {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TestFilter } from '../test-filter';\nimport { TestService } from '../test.service';\nimport { Test } from '../test';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: 'test-list.component.html'\n})\nexport class TestListComponent implements OnInit {\n\n  filter = new TestFilter();\n  selectedTest: Test;\n  feedback: any = {};\n\n  get testList(): Test[] {\n    return this.testService.testList;\n  }\n\n  constructor(private testService: TestService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.testService.load(this.filter);\n  }\n\n  select(selected: Test): void {\n    this.selectedTest = selected;\n  }\n\n  delete(test: Test): void {\n    if (confirm('Etes-vous sûr?')) {\n      this.testService.delete(test).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Suppression effectuée avec succès!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Erreur lors de la suppression.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TestListComponent } from './test-list/test-list.component';\nimport { TestEditComponent } from './test-edit/test-edit.component';\nimport { TestService } from './test.service';\nimport { TEST_ROUTES } from './test.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(TEST_ROUTES)\n  ],\n  declarations: [\n    TestListComponent,\n    TestEditComponent\n  ],\n  providers: [TestService],\n  exports: []\n})\nexport class TestModule { }\n","import { Routes } from '@angular/router';\nimport { TestListComponent } from './test-list/test-list.component';\nimport { TestEditComponent } from './test-edit/test-edit.component';\n\nexport const TEST_ROUTES: Routes = [\n  {\n    path: 'tests',\n    component: TestListComponent\n  },\n  {\n    path: 'tests/:id',\n    component: TestEditComponent\n  }\n];\n","import { Test } from './test';\nimport { TestFilter } from './test-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class TestService {\n  testList: Test[] = [];\n  api = 'http://localhost:5000/api/espece';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Test> {\n    const url = `${this.api}/${id}`;\n    const params = { _id: id };\n    return this.http.get<Test>(url, {params, headers});\n  }\n\n  load(filter: TestFilter): void {\n    this.find(filter).subscribe(result => {\n        this.testList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: TestFilter): Observable<Test[]> {\n    const params = {\n    };\n\n    return this.http.get<Test[]>(this.api, {params, headers});\n  }\n\n  save(entity: Test): Observable<Test> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.put<Test>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Test>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Test): Observable<Test> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity._id) {\n      url = `${this.api}/${entity._id.toString()}`;\n      params = new HttpParams().set('ID', entity._id.toString());\n      return this.http.delete<Test>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Test {\n  _id: number;\n  name: string;\n  description: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  main_api: 'http://localhost:5000',\n  encrypt_key:'aabbccddee1122334455'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":"webpack:///"}